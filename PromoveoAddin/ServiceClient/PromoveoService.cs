//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IConfiguration")]
public interface IConfiguration
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfiguration/GetVisioMasterFileName", ReplyAction="http://tempuri.org/IConfiguration/GetVisioMasterFileNameResponse")]
    string GetVisioMasterFileName(int configurationID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfiguration/SetVisioMasterFileName", ReplyAction="http://tempuri.org/IConfiguration/SetVisioMasterFileNameResponse")]
    void SetVisioMasterFileName(int configurationID, string visioMasterFilename);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IConfigurationChannel : IConfiguration, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class ConfigurationClient : System.ServiceModel.ClientBase<IConfiguration>, IConfiguration
{
    
    public ConfigurationClient()
    {
    }
    
    public ConfigurationClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public ConfigurationClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ConfigurationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ConfigurationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public string GetVisioMasterFileName(int configurationID)
    {
        return base.Channel.GetVisioMasterFileName(configurationID);
    }
    
    public void SetVisioMasterFileName(int configurationID, string visioMasterFilename)
    {
        base.Channel.SetVisioMasterFileName(configurationID, visioMasterFilename);
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IModelUserRoles")]
public interface IModelUserRoles
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelUserRoles/AssignUser", ReplyAction="http://tempuri.org/IModelUserRoles/AssignUserResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    void AssignUser(int configurationID, int modelRoleID, int userID);
    
    // CODEGEN: Parameter 'GetAssignedUserResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelUserRoles/GetAssignedUser", ReplyAction="http://tempuri.org/IModelUserRoles/GetAssignedUserResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    GetAssignedUserResponse GetAssignedUser(GetAssignedUserRequest request);
    
    // CODEGEN: Parameter 'GetAvailableUserResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelUserRoles/GetAvailableUser", ReplyAction="http://tempuri.org/IModelUserRoles/GetAvailableUserResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    GetAvailableUserResponse GetAvailableUser(GetAvailableUserRequest request);
    
    // CODEGEN: Parameter 'GetModelUserRolesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelUserRoles/GetModelUserRoles", ReplyAction="http://tempuri.org/IModelUserRoles/GetModelUserRolesResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    GetModelUserRolesResponse GetModelUserRoles(GetModelUserRolesRequest request);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelUserRoles/RemoveUser", ReplyAction="http://tempuri.org/IModelUserRoles/RemoveUserResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    void RemoveUser(int configurationID, int modelRoleID, int userID);
    
    // CODEGEN: Parameter 'dataTable' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelUserRoles/Update", ReplyAction="http://tempuri.org/IModelUserRoles/UpdateResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    UpdateResponse Update(UpdateRequest request);
}

/// <summary>
///Represents a strongly typed in-memory cache of data.
///</summary>
// This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
[global::System.Serializable()]
[global::System.ComponentModel.DesignerCategoryAttribute("code")]
[global::System.ComponentModel.ToolboxItem(true)]
[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
[global::System.Xml.Serialization.XmlRootAttribute("PromoveoDataSet")]
[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
public partial class PromoveoDataSet : global::System.Data.DataSet
{
    
    private ProcessModelUsersDataTable tableProcessModelUsers;
    
    private UserRoleAssignmentDataTable tableUserRoleAssignment;
    
    private ConfigurationDataTable tableConfiguration;
    
    private ModelUserGroupDataTable tableModelUserGroup;
    
    private ProcessModelDataTable tableProcessModel;
    
    private ProcessModel_PublishingPlatformRoleDataTable tableProcessModel_PublishingPlatformRole;
    
    private PublishingPlatformRoleDataTable tablePublishingPlatformRole;
    
    private PublishingPlatformUserDataTable tablePublishingPlatformUser;
    
    private PublishingPlatformUser_PublishingPlatformRoleDataTable tablePublishingPlatformUser_PublishingPlatformRole;
    
    private UserToModelUserGroupAssignmentDataTable tableUserToModelUserGroupAssignment;
    
    private global::System.Data.DataRelation relationFK_ModelUserGroup_ToConfiguration;
    
    private global::System.Data.DataRelation relationFK_ProcessModel_Configuration;
    
    private global::System.Data.DataRelation relationFK_ProcessModel_PublishingPlatformRole_ToProcessModel;
    
    private global::System.Data.DataRelation relationFK_ProcessModel_PublishingPlatformRole_ToPublishingPlatformRole;
    
    private global::System.Data.DataRelation relationFK_PublishingPlatformRole_Configuration;
    
    private global::System.Data.DataRelation relationFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformRole;
    
    private global::System.Data.DataRelation relationFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser;
    
    private global::System.Data.DataRelation relationFK_UserToModelUserGroupAssignment_ToModelUserGroup;
    
    private global::System.Data.DataRelation relationFK_UserToModelUserGroupAssignment_ToUser;
    
    private global::System.Data.DataRelation relationFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser1;
    
    private global::System.Data.DataRelation relationFK_UserToModelUserGroupAssignment_ToUser1;
    
    private global::System.Data.DataRelation relationFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser2;
    
    private global::System.Data.DataRelation relationFK_UserToModelUserGroupAssignment_ToUser2;
    
    private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public PromoveoDataSet()
    {
        this.BeginInit();
        this.InitClass();
        global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
        base.Tables.CollectionChanged += schemaChangedHandler;
        base.Relations.CollectionChanged += schemaChangedHandler;
        this.EndInit();
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    protected PromoveoDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
            base(info, context, false)
    {
        if ((this.IsBinarySerialized(info, context) == true))
        {
            this.InitVars(false);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler1;
            this.Relations.CollectionChanged += schemaChangedHandler1;
            return;
        }
        string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
        if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
        {
            global::System.Data.DataSet ds = new global::System.Data.DataSet();
            ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            if ((ds.Tables["ProcessModelUsers"] != null))
            {
                base.Tables.Add(new ProcessModelUsersDataTable(ds.Tables["ProcessModelUsers"]));
            }
            if ((ds.Tables["UserRoleAssignment"] != null))
            {
                base.Tables.Add(new UserRoleAssignmentDataTable(ds.Tables["UserRoleAssignment"]));
            }
            if ((ds.Tables["Configuration"] != null))
            {
                base.Tables.Add(new ConfigurationDataTable(ds.Tables["Configuration"]));
            }
            if ((ds.Tables["ModelUserGroup"] != null))
            {
                base.Tables.Add(new ModelUserGroupDataTable(ds.Tables["ModelUserGroup"]));
            }
            if ((ds.Tables["ProcessModel"] != null))
            {
                base.Tables.Add(new ProcessModelDataTable(ds.Tables["ProcessModel"]));
            }
            if ((ds.Tables["ProcessModel_PublishingPlatformRole"] != null))
            {
                base.Tables.Add(new ProcessModel_PublishingPlatformRoleDataTable(ds.Tables["ProcessModel_PublishingPlatformRole"]));
            }
            if ((ds.Tables["PublishingPlatformRole"] != null))
            {
                base.Tables.Add(new PublishingPlatformRoleDataTable(ds.Tables["PublishingPlatformRole"]));
            }
            if ((ds.Tables["PublishingPlatformUser"] != null))
            {
                base.Tables.Add(new PublishingPlatformUserDataTable(ds.Tables["PublishingPlatformUser"]));
            }
            if ((ds.Tables["PublishingPlatformUser_PublishingPlatformRole"] != null))
            {
                base.Tables.Add(new PublishingPlatformUser_PublishingPlatformRoleDataTable(ds.Tables["PublishingPlatformUser_PublishingPlatformRole"]));
            }
            if ((ds.Tables["UserToModelUserGroupAssignment"] != null))
            {
                base.Tables.Add(new UserToModelUserGroupAssignmentDataTable(ds.Tables["UserToModelUserGroupAssignment"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        else
        {
            this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
        }
        this.GetSerializationData(info, context);
        global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
        base.Tables.CollectionChanged += schemaChangedHandler;
        this.Relations.CollectionChanged += schemaChangedHandler;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public ProcessModelUsersDataTable ProcessModelUsers
    {
        get
        {
            return this.tableProcessModelUsers;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public UserRoleAssignmentDataTable UserRoleAssignment
    {
        get
        {
            return this.tableUserRoleAssignment;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public ConfigurationDataTable Configuration
    {
        get
        {
            return this.tableConfiguration;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public ModelUserGroupDataTable ModelUserGroup
    {
        get
        {
            return this.tableModelUserGroup;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public ProcessModelDataTable ProcessModel
    {
        get
        {
            return this.tableProcessModel;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public ProcessModel_PublishingPlatformRoleDataTable ProcessModel_PublishingPlatformRole
    {
        get
        {
            return this.tableProcessModel_PublishingPlatformRole;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public PublishingPlatformRoleDataTable PublishingPlatformRole
    {
        get
        {
            return this.tablePublishingPlatformRole;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public PublishingPlatformUserDataTable PublishingPlatformUser
    {
        get
        {
            return this.tablePublishingPlatformUser;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public PublishingPlatformUser_PublishingPlatformRoleDataTable PublishingPlatformUser_PublishingPlatformRole
    {
        get
        {
            return this.tablePublishingPlatformUser_PublishingPlatformRole;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
    public UserToModelUserGroupAssignmentDataTable UserToModelUserGroupAssignment
    {
        get
        {
            return this.tableUserToModelUserGroupAssignment;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.ComponentModel.BrowsableAttribute(true)]
    [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
    public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
    {
        get
        {
            return this._schemaSerializationMode;
        }
        set
        {
            this._schemaSerializationMode = value;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public new global::System.Data.DataTableCollection Tables
    {
        get
        {
            return base.Tables;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
    public new global::System.Data.DataRelationCollection Relations
    {
        get
        {
            return base.Relations;
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    protected override void InitializeDerivedDataSet()
    {
        this.BeginInit();
        this.InitClass();
        this.EndInit();
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public override global::System.Data.DataSet Clone()
    {
        PromoveoDataSet cln = ((PromoveoDataSet)(base.Clone()));
        cln.InitVars();
        cln.SchemaSerializationMode = this.SchemaSerializationMode;
        return cln;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    protected override bool ShouldSerializeTables()
    {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    protected override bool ShouldSerializeRelations()
    {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
    {
        if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
        {
            this.Reset();
            global::System.Data.DataSet ds = new global::System.Data.DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["ProcessModelUsers"] != null))
            {
                base.Tables.Add(new ProcessModelUsersDataTable(ds.Tables["ProcessModelUsers"]));
            }
            if ((ds.Tables["UserRoleAssignment"] != null))
            {
                base.Tables.Add(new UserRoleAssignmentDataTable(ds.Tables["UserRoleAssignment"]));
            }
            if ((ds.Tables["Configuration"] != null))
            {
                base.Tables.Add(new ConfigurationDataTable(ds.Tables["Configuration"]));
            }
            if ((ds.Tables["ModelUserGroup"] != null))
            {
                base.Tables.Add(new ModelUserGroupDataTable(ds.Tables["ModelUserGroup"]));
            }
            if ((ds.Tables["ProcessModel"] != null))
            {
                base.Tables.Add(new ProcessModelDataTable(ds.Tables["ProcessModel"]));
            }
            if ((ds.Tables["ProcessModel_PublishingPlatformRole"] != null))
            {
                base.Tables.Add(new ProcessModel_PublishingPlatformRoleDataTable(ds.Tables["ProcessModel_PublishingPlatformRole"]));
            }
            if ((ds.Tables["PublishingPlatformRole"] != null))
            {
                base.Tables.Add(new PublishingPlatformRoleDataTable(ds.Tables["PublishingPlatformRole"]));
            }
            if ((ds.Tables["PublishingPlatformUser"] != null))
            {
                base.Tables.Add(new PublishingPlatformUserDataTable(ds.Tables["PublishingPlatformUser"]));
            }
            if ((ds.Tables["PublishingPlatformUser_PublishingPlatformRole"] != null))
            {
                base.Tables.Add(new PublishingPlatformUser_PublishingPlatformRoleDataTable(ds.Tables["PublishingPlatformUser_PublishingPlatformRole"]));
            }
            if ((ds.Tables["UserToModelUserGroupAssignment"] != null))
            {
                base.Tables.Add(new UserToModelUserGroupAssignmentDataTable(ds.Tables["UserToModelUserGroupAssignment"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        else
        {
            this.ReadXml(reader);
            this.InitVars();
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
    {
        global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
        this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
        stream.Position = 0;
        return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal void InitVars()
    {
        this.InitVars(true);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal void InitVars(bool initTable)
    {
        this.tableProcessModelUsers = ((ProcessModelUsersDataTable)(base.Tables["ProcessModelUsers"]));
        if ((initTable == true))
        {
            if ((this.tableProcessModelUsers != null))
            {
                this.tableProcessModelUsers.InitVars();
            }
        }
        this.tableUserRoleAssignment = ((UserRoleAssignmentDataTable)(base.Tables["UserRoleAssignment"]));
        if ((initTable == true))
        {
            if ((this.tableUserRoleAssignment != null))
            {
                this.tableUserRoleAssignment.InitVars();
            }
        }
        this.tableConfiguration = ((ConfigurationDataTable)(base.Tables["Configuration"]));
        if ((initTable == true))
        {
            if ((this.tableConfiguration != null))
            {
                this.tableConfiguration.InitVars();
            }
        }
        this.tableModelUserGroup = ((ModelUserGroupDataTable)(base.Tables["ModelUserGroup"]));
        if ((initTable == true))
        {
            if ((this.tableModelUserGroup != null))
            {
                this.tableModelUserGroup.InitVars();
            }
        }
        this.tableProcessModel = ((ProcessModelDataTable)(base.Tables["ProcessModel"]));
        if ((initTable == true))
        {
            if ((this.tableProcessModel != null))
            {
                this.tableProcessModel.InitVars();
            }
        }
        this.tableProcessModel_PublishingPlatformRole = ((ProcessModel_PublishingPlatformRoleDataTable)(base.Tables["ProcessModel_PublishingPlatformRole"]));
        if ((initTable == true))
        {
            if ((this.tableProcessModel_PublishingPlatformRole != null))
            {
                this.tableProcessModel_PublishingPlatformRole.InitVars();
            }
        }
        this.tablePublishingPlatformRole = ((PublishingPlatformRoleDataTable)(base.Tables["PublishingPlatformRole"]));
        if ((initTable == true))
        {
            if ((this.tablePublishingPlatformRole != null))
            {
                this.tablePublishingPlatformRole.InitVars();
            }
        }
        this.tablePublishingPlatformUser = ((PublishingPlatformUserDataTable)(base.Tables["PublishingPlatformUser"]));
        if ((initTable == true))
        {
            if ((this.tablePublishingPlatformUser != null))
            {
                this.tablePublishingPlatformUser.InitVars();
            }
        }
        this.tablePublishingPlatformUser_PublishingPlatformRole = ((PublishingPlatformUser_PublishingPlatformRoleDataTable)(base.Tables["PublishingPlatformUser_PublishingPlatformRole"]));
        if ((initTable == true))
        {
            if ((this.tablePublishingPlatformUser_PublishingPlatformRole != null))
            {
                this.tablePublishingPlatformUser_PublishingPlatformRole.InitVars();
            }
        }
        this.tableUserToModelUserGroupAssignment = ((UserToModelUserGroupAssignmentDataTable)(base.Tables["UserToModelUserGroupAssignment"]));
        if ((initTable == true))
        {
            if ((this.tableUserToModelUserGroupAssignment != null))
            {
                this.tableUserToModelUserGroupAssignment.InitVars();
            }
        }
        this.relationFK_ModelUserGroup_ToConfiguration = this.Relations["FK_ModelUserGroup_ToConfiguration"];
        this.relationFK_ProcessModel_Configuration = this.Relations["FK_ProcessModel_Configuration"];
        this.relationFK_ProcessModel_PublishingPlatformRole_ToProcessModel = this.Relations["FK_ProcessModel_PublishingPlatformRole_ToProcessModel"];
        this.relationFK_ProcessModel_PublishingPlatformRole_ToPublishingPlatformRole = this.Relations["FK_ProcessModel_PublishingPlatformRole_ToPublishingPlatformRole"];
        this.relationFK_PublishingPlatformRole_Configuration = this.Relations["FK_PublishingPlatformRole_Configuration"];
        this.relationFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformRole = this.Relations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformRole"];
        this.relationFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser = this.Relations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser"];
        this.relationFK_UserToModelUserGroupAssignment_ToModelUserGroup = this.Relations["FK_UserToModelUserGroupAssignment_ToModelUserGroup"];
        this.relationFK_UserToModelUserGroupAssignment_ToUser = this.Relations["FK_UserToModelUserGroupAssignment_ToUser"];
        this.relationFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser1 = this.Relations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser1"];
        this.relationFK_UserToModelUserGroupAssignment_ToUser1 = this.Relations["FK_UserToModelUserGroupAssignment_ToUser1"];
        this.relationFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser2 = this.Relations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser2"];
        this.relationFK_UserToModelUserGroupAssignment_ToUser2 = this.Relations["FK_UserToModelUserGroupAssignment_ToUser2"];
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    private void InitClass()
    {
        this.DataSetName = "PromoveoDataSet";
        this.Prefix = "";
        this.Namespace = "http://tempuri.org/PromoveoDataSet.xsd";
        this.EnforceConstraints = true;
        this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        this.tableProcessModelUsers = new ProcessModelUsersDataTable();
        base.Tables.Add(this.tableProcessModelUsers);
        this.tableUserRoleAssignment = new UserRoleAssignmentDataTable();
        base.Tables.Add(this.tableUserRoleAssignment);
        this.tableConfiguration = new ConfigurationDataTable();
        base.Tables.Add(this.tableConfiguration);
        this.tableModelUserGroup = new ModelUserGroupDataTable();
        base.Tables.Add(this.tableModelUserGroup);
        this.tableProcessModel = new ProcessModelDataTable();
        base.Tables.Add(this.tableProcessModel);
        this.tableProcessModel_PublishingPlatformRole = new ProcessModel_PublishingPlatformRoleDataTable();
        base.Tables.Add(this.tableProcessModel_PublishingPlatformRole);
        this.tablePublishingPlatformRole = new PublishingPlatformRoleDataTable();
        base.Tables.Add(this.tablePublishingPlatformRole);
        this.tablePublishingPlatformUser = new PublishingPlatformUserDataTable();
        base.Tables.Add(this.tablePublishingPlatformUser);
        this.tablePublishingPlatformUser_PublishingPlatformRole = new PublishingPlatformUser_PublishingPlatformRoleDataTable();
        base.Tables.Add(this.tablePublishingPlatformUser_PublishingPlatformRole);
        this.tableUserToModelUserGroupAssignment = new UserToModelUserGroupAssignmentDataTable();
        base.Tables.Add(this.tableUserToModelUserGroupAssignment);
        this.relationFK_ModelUserGroup_ToConfiguration = new global::System.Data.DataRelation("FK_ModelUserGroup_ToConfiguration", new global::System.Data.DataColumn[] {
                    this.tableConfiguration.IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableModelUserGroup.FK_ConfigurationColumn}, false);
        this.Relations.Add(this.relationFK_ModelUserGroup_ToConfiguration);
        this.relationFK_ProcessModel_Configuration = new global::System.Data.DataRelation("FK_ProcessModel_Configuration", new global::System.Data.DataColumn[] {
                    this.tableConfiguration.IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableProcessModel.FK_ConfigurationColumn}, false);
        this.Relations.Add(this.relationFK_ProcessModel_Configuration);
        this.relationFK_ProcessModel_PublishingPlatformRole_ToProcessModel = new global::System.Data.DataRelation("FK_ProcessModel_PublishingPlatformRole_ToProcessModel", new global::System.Data.DataColumn[] {
                    this.tableProcessModel.IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableProcessModel_PublishingPlatformRole.FK_ProcessModelColumn}, false);
        this.Relations.Add(this.relationFK_ProcessModel_PublishingPlatformRole_ToProcessModel);
        this.relationFK_ProcessModel_PublishingPlatformRole_ToPublishingPlatformRole = new global::System.Data.DataRelation("FK_ProcessModel_PublishingPlatformRole_ToPublishingPlatformRole", new global::System.Data.DataColumn[] {
                    this.tablePublishingPlatformRole.IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableProcessModel_PublishingPlatformRole.FK_PublishingPlatformRoleColumn}, false);
        this.Relations.Add(this.relationFK_ProcessModel_PublishingPlatformRole_ToPublishingPlatformRole);
        this.relationFK_PublishingPlatformRole_Configuration = new global::System.Data.DataRelation("FK_PublishingPlatformRole_Configuration", new global::System.Data.DataColumn[] {
                    this.tableConfiguration.IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePublishingPlatformRole.FK_ConfigurationColumn}, false);
        this.Relations.Add(this.relationFK_PublishingPlatformRole_Configuration);
        this.relationFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformRole = new global::System.Data.DataRelation("FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformRole", new global::System.Data.DataColumn[] {
                    this.tablePublishingPlatformRole.IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePublishingPlatformUser_PublishingPlatformRole.FK_PublishingPlatformRoleColumn}, false);
        this.Relations.Add(this.relationFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformRole);
        this.relationFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser = new global::System.Data.DataRelation("FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser", new global::System.Data.DataColumn[] {
                    this.tablePublishingPlatformUser.IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePublishingPlatformUser_PublishingPlatformRole.FK_PublishingPlatformUserColumn}, false);
        this.Relations.Add(this.relationFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser);
        this.relationFK_UserToModelUserGroupAssignment_ToModelUserGroup = new global::System.Data.DataRelation("FK_UserToModelUserGroupAssignment_ToModelUserGroup", new global::System.Data.DataColumn[] {
                    this.tableModelUserGroup.IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableUserToModelUserGroupAssignment.FK_ModelUserGroupColumn}, false);
        this.Relations.Add(this.relationFK_UserToModelUserGroupAssignment_ToModelUserGroup);
        this.relationFK_UserToModelUserGroupAssignment_ToUser = new global::System.Data.DataRelation("FK_UserToModelUserGroupAssignment_ToUser", new global::System.Data.DataColumn[] {
                    this.tablePublishingPlatformUser.IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableUserToModelUserGroupAssignment.FK_UserColumn}, false);
        this.Relations.Add(this.relationFK_UserToModelUserGroupAssignment_ToUser);
        this.relationFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser1 = new global::System.Data.DataRelation("FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser1", new global::System.Data.DataColumn[] {
                    this.tableProcessModelUsers.IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePublishingPlatformUser_PublishingPlatformRole.FK_PublishingPlatformUserColumn}, false);
        this.Relations.Add(this.relationFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser1);
        this.relationFK_UserToModelUserGroupAssignment_ToUser1 = new global::System.Data.DataRelation("FK_UserToModelUserGroupAssignment_ToUser1", new global::System.Data.DataColumn[] {
                    this.tableProcessModelUsers.IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableUserToModelUserGroupAssignment.FK_UserColumn}, false);
        this.Relations.Add(this.relationFK_UserToModelUserGroupAssignment_ToUser1);
        this.relationFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser2 = new global::System.Data.DataRelation("FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser2", new global::System.Data.DataColumn[] {
                    this.tableUserRoleAssignment.IdColumn}, new global::System.Data.DataColumn[] {
                    this.tablePublishingPlatformUser_PublishingPlatformRole.FK_PublishingPlatformUserColumn}, false);
        this.Relations.Add(this.relationFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser2);
        this.relationFK_UserToModelUserGroupAssignment_ToUser2 = new global::System.Data.DataRelation("FK_UserToModelUserGroupAssignment_ToUser2", new global::System.Data.DataColumn[] {
                    this.tableUserRoleAssignment.IdColumn}, new global::System.Data.DataColumn[] {
                    this.tableUserToModelUserGroupAssignment.FK_UserColumn}, false);
        this.Relations.Add(this.relationFK_UserToModelUserGroupAssignment_ToUser2);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    private bool ShouldSerializeProcessModelUsers()
    {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    private bool ShouldSerializeUserRoleAssignment()
    {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    private bool ShouldSerializeConfiguration()
    {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    private bool ShouldSerializeModelUserGroup()
    {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    private bool ShouldSerializeProcessModel()
    {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    private bool ShouldSerializeProcessModel_PublishingPlatformRole()
    {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    private bool ShouldSerializePublishingPlatformRole()
    {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    private bool ShouldSerializePublishingPlatformUser()
    {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    private bool ShouldSerializePublishingPlatformUser_PublishingPlatformRole()
    {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    private bool ShouldSerializeUserToModelUserGroupAssignment()
    {
        return false;
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
    {
        if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
        {
            this.InitVars();
        }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
    {
        PromoveoDataSet ds = new PromoveoDataSet();
        global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
        global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
        global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
        any.Namespace = ds.Namespace;
        sequence.Items.Add(any);
        type.Particle = sequence;
        global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
        if (xs.Contains(dsSchema.TargetNamespace))
        {
            global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
            global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
            try
            {
                global::System.Xml.Schema.XmlSchema schema = null;
                dsSchema.Write(s1);
                for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                {
                    schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                    s2.SetLength(0);
                    schema.Write(s2);
                    if ((s1.Length == s2.Length))
                    {
                        s1.Position = 0;
                        s2.Position = 0;
                        for (; ((s1.Position != s1.Length) 
                                    && (s1.ReadByte() == s2.ReadByte())); )
                        {
                            ;
                        }
                        if ((s1.Position == s1.Length))
                        {
                            return type;
                        }
                    }
                }
            }
            finally
            {
                if ((s1 != null))
                {
                    s1.Close();
                }
                if ((s2 != null))
                {
                    s2.Close();
                }
            }
        }
        xs.Add(dsSchema);
        return type;
    }
    
    public delegate void ProcessModelUsersRowChangeEventHandler(object sender, ProcessModelUsersRowChangeEvent e);
    
    public delegate void UserRoleAssignmentRowChangeEventHandler(object sender, UserRoleAssignmentRowChangeEvent e);
    
    public delegate void ConfigurationRowChangeEventHandler(object sender, ConfigurationRowChangeEvent e);
    
    public delegate void ModelUserGroupRowChangeEventHandler(object sender, ModelUserGroupRowChangeEvent e);
    
    public delegate void ProcessModelRowChangeEventHandler(object sender, ProcessModelRowChangeEvent e);
    
    public delegate void ProcessModel_PublishingPlatformRoleRowChangeEventHandler(object sender, ProcessModel_PublishingPlatformRoleRowChangeEvent e);
    
    public delegate void PublishingPlatformRoleRowChangeEventHandler(object sender, PublishingPlatformRoleRowChangeEvent e);
    
    public delegate void PublishingPlatformUserRowChangeEventHandler(object sender, PublishingPlatformUserRowChangeEvent e);
    
    public delegate void PublishingPlatformUser_PublishingPlatformRoleRowChangeEventHandler(object sender, PublishingPlatformUser_PublishingPlatformRoleRowChangeEvent e);
    
    public delegate void UserToModelUserGroupAssignmentRowChangeEventHandler(object sender, UserToModelUserGroupAssignmentRowChangeEvent e);
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class ProcessModelUsersDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {
        
        private global::System.Data.DataColumn columnId;
        
        private global::System.Data.DataColumn columnName;
        
        private global::System.Data.DataColumn columnShortname;
        
        private global::System.Data.DataColumn columnEmail;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelUsersDataTable()
        {
            this.TableName = "ProcessModelUsers";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal ProcessModelUsersDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ProcessModelUsersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context)
        {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn IdColumn
        {
            get
            {
                return this.columnId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn NameColumn
        {
            get
            {
                return this.columnName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn ShortnameColumn
        {
            get
            {
                return this.columnShortname;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn EmailColumn
        {
            get
            {
                return this.columnEmail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelUsersRow this[int index]
        {
            get
            {
                return ((ProcessModelUsersRow)(this.Rows[index]));
            }
        }
        
        public event ProcessModelUsersRowChangeEventHandler ProcessModelUsersRowChanging;
        
        public event ProcessModelUsersRowChangeEventHandler ProcessModelUsersRowChanged;
        
        public event ProcessModelUsersRowChangeEventHandler ProcessModelUsersRowDeleting;
        
        public event ProcessModelUsersRowChangeEventHandler ProcessModelUsersRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddProcessModelUsersRow(ProcessModelUsersRow row)
        {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelUsersRow AddProcessModelUsersRow(string Name, string Shortname, string Email)
        {
            ProcessModelUsersRow rowProcessModelUsersRow = ((ProcessModelUsersRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    Name,
                    Shortname,
                    Email};
            rowProcessModelUsersRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowProcessModelUsersRow);
            return rowProcessModelUsersRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelUsersRow FindById(int Id)
        {
            return ((ProcessModelUsersRow)(this.Rows.Find(new object[] {
                        Id})));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataTable Clone()
        {
            ProcessModelUsersDataTable cln = ((ProcessModelUsersDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new ProcessModelUsersDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars()
        {
            this.columnId = base.Columns["Id"];
            this.columnName = base.Columns["Name"];
            this.columnShortname = base.Columns["Shortname"];
            this.columnEmail = base.Columns["Email"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass()
        {
            this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnId);
            this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnName);
            this.columnShortname = new global::System.Data.DataColumn("Shortname", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnShortname);
            this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnEmail);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
            this.columnId.AutoIncrement = true;
            this.columnId.AutoIncrementSeed = -1;
            this.columnId.AutoIncrementStep = -1;
            this.columnId.AllowDBNull = false;
            this.columnId.ReadOnly = true;
            this.columnId.Unique = true;
            this.columnName.AllowDBNull = false;
            this.columnName.MaxLength = 50;
            this.columnShortname.AllowDBNull = false;
            this.columnShortname.MaxLength = 50;
            this.columnEmail.MaxLength = 50;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelUsersRow NewProcessModelUsersRow()
        {
            return ((ProcessModelUsersRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new ProcessModelUsersRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Type GetRowType()
        {
            return typeof(ProcessModelUsersRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.ProcessModelUsersRowChanged != null))
            {
                this.ProcessModelUsersRowChanged(this, new ProcessModelUsersRowChangeEvent(((ProcessModelUsersRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.ProcessModelUsersRowChanging != null))
            {
                this.ProcessModelUsersRowChanging(this, new ProcessModelUsersRowChangeEvent(((ProcessModelUsersRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.ProcessModelUsersRowDeleted != null))
            {
                this.ProcessModelUsersRowDeleted(this, new ProcessModelUsersRowChangeEvent(((ProcessModelUsersRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.ProcessModelUsersRowDeleting != null))
            {
                this.ProcessModelUsersRowDeleting(this, new ProcessModelUsersRowChangeEvent(((ProcessModelUsersRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemoveProcessModelUsersRow(ProcessModelUsersRow row)
        {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            PromoveoDataSet ds = new PromoveoDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "ProcessModelUsersDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class UserRoleAssignmentDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {
        
        private global::System.Data.DataColumn columnId;
        
        private global::System.Data.DataColumn columnName;
        
        private global::System.Data.DataColumn columnShortname;
        
        private global::System.Data.DataColumn columnEmail;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserRoleAssignmentDataTable()
        {
            this.TableName = "UserRoleAssignment";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal UserRoleAssignmentDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected UserRoleAssignmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context)
        {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn IdColumn
        {
            get
            {
                return this.columnId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn NameColumn
        {
            get
            {
                return this.columnName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn ShortnameColumn
        {
            get
            {
                return this.columnShortname;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn EmailColumn
        {
            get
            {
                return this.columnEmail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserRoleAssignmentRow this[int index]
        {
            get
            {
                return ((UserRoleAssignmentRow)(this.Rows[index]));
            }
        }
        
        public event UserRoleAssignmentRowChangeEventHandler UserRoleAssignmentRowChanging;
        
        public event UserRoleAssignmentRowChangeEventHandler UserRoleAssignmentRowChanged;
        
        public event UserRoleAssignmentRowChangeEventHandler UserRoleAssignmentRowDeleting;
        
        public event UserRoleAssignmentRowChangeEventHandler UserRoleAssignmentRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddUserRoleAssignmentRow(UserRoleAssignmentRow row)
        {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserRoleAssignmentRow AddUserRoleAssignmentRow(string Name, string Shortname, string Email)
        {
            UserRoleAssignmentRow rowUserRoleAssignmentRow = ((UserRoleAssignmentRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    Name,
                    Shortname,
                    Email};
            rowUserRoleAssignmentRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowUserRoleAssignmentRow);
            return rowUserRoleAssignmentRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserRoleAssignmentRow FindById(int Id)
        {
            return ((UserRoleAssignmentRow)(this.Rows.Find(new object[] {
                        Id})));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataTable Clone()
        {
            UserRoleAssignmentDataTable cln = ((UserRoleAssignmentDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new UserRoleAssignmentDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars()
        {
            this.columnId = base.Columns["Id"];
            this.columnName = base.Columns["Name"];
            this.columnShortname = base.Columns["Shortname"];
            this.columnEmail = base.Columns["Email"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass()
        {
            this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnId);
            this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnName);
            this.columnShortname = new global::System.Data.DataColumn("Shortname", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnShortname);
            this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnEmail);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
            this.columnId.AutoIncrement = true;
            this.columnId.AutoIncrementSeed = -1;
            this.columnId.AutoIncrementStep = -1;
            this.columnId.AllowDBNull = false;
            this.columnId.ReadOnly = true;
            this.columnId.Unique = true;
            this.columnName.AllowDBNull = false;
            this.columnName.MaxLength = 50;
            this.columnShortname.AllowDBNull = false;
            this.columnShortname.MaxLength = 50;
            this.columnEmail.MaxLength = 50;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserRoleAssignmentRow NewUserRoleAssignmentRow()
        {
            return ((UserRoleAssignmentRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new UserRoleAssignmentRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Type GetRowType()
        {
            return typeof(UserRoleAssignmentRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.UserRoleAssignmentRowChanged != null))
            {
                this.UserRoleAssignmentRowChanged(this, new UserRoleAssignmentRowChangeEvent(((UserRoleAssignmentRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.UserRoleAssignmentRowChanging != null))
            {
                this.UserRoleAssignmentRowChanging(this, new UserRoleAssignmentRowChangeEvent(((UserRoleAssignmentRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.UserRoleAssignmentRowDeleted != null))
            {
                this.UserRoleAssignmentRowDeleted(this, new UserRoleAssignmentRowChangeEvent(((UserRoleAssignmentRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.UserRoleAssignmentRowDeleting != null))
            {
                this.UserRoleAssignmentRowDeleting(this, new UserRoleAssignmentRowChangeEvent(((UserRoleAssignmentRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemoveUserRoleAssignmentRow(UserRoleAssignmentRow row)
        {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            PromoveoDataSet ds = new PromoveoDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "UserRoleAssignmentDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class ConfigurationDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {
        
        private global::System.Data.DataColumn columnId;
        
        private global::System.Data.DataColumn columnName;
        
        private global::System.Data.DataColumn columnVisioMasterFilename;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ConfigurationDataTable()
        {
            this.TableName = "Configuration";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal ConfigurationDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ConfigurationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context)
        {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn IdColumn
        {
            get
            {
                return this.columnId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn NameColumn
        {
            get
            {
                return this.columnName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn VisioMasterFilenameColumn
        {
            get
            {
                return this.columnVisioMasterFilename;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ConfigurationRow this[int index]
        {
            get
            {
                return ((ConfigurationRow)(this.Rows[index]));
            }
        }
        
        public event ConfigurationRowChangeEventHandler ConfigurationRowChanging;
        
        public event ConfigurationRowChangeEventHandler ConfigurationRowChanged;
        
        public event ConfigurationRowChangeEventHandler ConfigurationRowDeleting;
        
        public event ConfigurationRowChangeEventHandler ConfigurationRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddConfigurationRow(ConfigurationRow row)
        {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ConfigurationRow AddConfigurationRow(string Name, string VisioMasterFilename)
        {
            ConfigurationRow rowConfigurationRow = ((ConfigurationRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    Name,
                    VisioMasterFilename};
            rowConfigurationRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowConfigurationRow);
            return rowConfigurationRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ConfigurationRow FindById(int Id)
        {
            return ((ConfigurationRow)(this.Rows.Find(new object[] {
                        Id})));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataTable Clone()
        {
            ConfigurationDataTable cln = ((ConfigurationDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new ConfigurationDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars()
        {
            this.columnId = base.Columns["Id"];
            this.columnName = base.Columns["Name"];
            this.columnVisioMasterFilename = base.Columns["VisioMasterFilename"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass()
        {
            this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnId);
            this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnName);
            this.columnVisioMasterFilename = new global::System.Data.DataColumn("VisioMasterFilename", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnVisioMasterFilename);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
            this.columnId.AutoIncrement = true;
            this.columnId.AutoIncrementSeed = -1;
            this.columnId.AutoIncrementStep = -1;
            this.columnId.AllowDBNull = false;
            this.columnId.ReadOnly = true;
            this.columnId.Unique = true;
            this.columnName.AllowDBNull = false;
            this.columnName.MaxLength = 50;
            this.columnVisioMasterFilename.MaxLength = 255;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ConfigurationRow NewConfigurationRow()
        {
            return ((ConfigurationRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new ConfigurationRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Type GetRowType()
        {
            return typeof(ConfigurationRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.ConfigurationRowChanged != null))
            {
                this.ConfigurationRowChanged(this, new ConfigurationRowChangeEvent(((ConfigurationRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.ConfigurationRowChanging != null))
            {
                this.ConfigurationRowChanging(this, new ConfigurationRowChangeEvent(((ConfigurationRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.ConfigurationRowDeleted != null))
            {
                this.ConfigurationRowDeleted(this, new ConfigurationRowChangeEvent(((ConfigurationRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.ConfigurationRowDeleting != null))
            {
                this.ConfigurationRowDeleting(this, new ConfigurationRowChangeEvent(((ConfigurationRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemoveConfigurationRow(ConfigurationRow row)
        {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            PromoveoDataSet ds = new PromoveoDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "ConfigurationDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class ModelUserGroupDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {
        
        private global::System.Data.DataColumn columnId;
        
        private global::System.Data.DataColumn columnName;
        
        private global::System.Data.DataColumn columnFK_Configuration;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ModelUserGroupDataTable()
        {
            this.TableName = "ModelUserGroup";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal ModelUserGroupDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ModelUserGroupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context)
        {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn IdColumn
        {
            get
            {
                return this.columnId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn NameColumn
        {
            get
            {
                return this.columnName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn FK_ConfigurationColumn
        {
            get
            {
                return this.columnFK_Configuration;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ModelUserGroupRow this[int index]
        {
            get
            {
                return ((ModelUserGroupRow)(this.Rows[index]));
            }
        }
        
        public event ModelUserGroupRowChangeEventHandler ModelUserGroupRowChanging;
        
        public event ModelUserGroupRowChangeEventHandler ModelUserGroupRowChanged;
        
        public event ModelUserGroupRowChangeEventHandler ModelUserGroupRowDeleting;
        
        public event ModelUserGroupRowChangeEventHandler ModelUserGroupRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddModelUserGroupRow(ModelUserGroupRow row)
        {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ModelUserGroupRow AddModelUserGroupRow(string Name, ConfigurationRow parentConfigurationRowByFK_ModelUserGroup_ToConfiguration)
        {
            ModelUserGroupRow rowModelUserGroupRow = ((ModelUserGroupRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    Name,
                    null};
            if ((parentConfigurationRowByFK_ModelUserGroup_ToConfiguration != null))
            {
                columnValuesArray[2] = parentConfigurationRowByFK_ModelUserGroup_ToConfiguration[0];
            }
            rowModelUserGroupRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowModelUserGroupRow);
            return rowModelUserGroupRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ModelUserGroupRow FindById(int Id)
        {
            return ((ModelUserGroupRow)(this.Rows.Find(new object[] {
                        Id})));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataTable Clone()
        {
            ModelUserGroupDataTable cln = ((ModelUserGroupDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new ModelUserGroupDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars()
        {
            this.columnId = base.Columns["Id"];
            this.columnName = base.Columns["Name"];
            this.columnFK_Configuration = base.Columns["FK_Configuration"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass()
        {
            this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnId);
            this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnName);
            this.columnFK_Configuration = new global::System.Data.DataColumn("FK_Configuration", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFK_Configuration);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
            this.columnId.AutoIncrement = true;
            this.columnId.AutoIncrementSeed = -1;
            this.columnId.AutoIncrementStep = -1;
            this.columnId.AllowDBNull = false;
            this.columnId.ReadOnly = true;
            this.columnId.Unique = true;
            this.columnName.AllowDBNull = false;
            this.columnName.MaxLength = 50;
            this.columnFK_Configuration.AllowDBNull = false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ModelUserGroupRow NewModelUserGroupRow()
        {
            return ((ModelUserGroupRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new ModelUserGroupRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Type GetRowType()
        {
            return typeof(ModelUserGroupRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.ModelUserGroupRowChanged != null))
            {
                this.ModelUserGroupRowChanged(this, new ModelUserGroupRowChangeEvent(((ModelUserGroupRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.ModelUserGroupRowChanging != null))
            {
                this.ModelUserGroupRowChanging(this, new ModelUserGroupRowChangeEvent(((ModelUserGroupRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.ModelUserGroupRowDeleted != null))
            {
                this.ModelUserGroupRowDeleted(this, new ModelUserGroupRowChangeEvent(((ModelUserGroupRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.ModelUserGroupRowDeleting != null))
            {
                this.ModelUserGroupRowDeleting(this, new ModelUserGroupRowChangeEvent(((ModelUserGroupRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemoveModelUserGroupRow(ModelUserGroupRow row)
        {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            PromoveoDataSet ds = new PromoveoDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "ModelUserGroupDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class ProcessModelDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {
        
        private global::System.Data.DataColumn columnId;
        
        private global::System.Data.DataColumn columnProcessModel;
        
        private global::System.Data.DataColumn columnPublishingVersion;
        
        private global::System.Data.DataColumn columnFK_PublishingPlatformUser;
        
        private global::System.Data.DataColumn columnFK_Configuration;
        
        private global::System.Data.DataColumn columnAcknowledgeState;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelDataTable()
        {
            this.TableName = "ProcessModel";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal ProcessModelDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ProcessModelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context)
        {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn IdColumn
        {
            get
            {
                return this.columnId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn ProcessModelColumn
        {
            get
            {
                return this.columnProcessModel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn PublishingVersionColumn
        {
            get
            {
                return this.columnPublishingVersion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn FK_PublishingPlatformUserColumn
        {
            get
            {
                return this.columnFK_PublishingPlatformUser;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn FK_ConfigurationColumn
        {
            get
            {
                return this.columnFK_Configuration;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn AcknowledgeStateColumn
        {
            get
            {
                return this.columnAcknowledgeState;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelRow this[int index]
        {
            get
            {
                return ((ProcessModelRow)(this.Rows[index]));
            }
        }
        
        public event ProcessModelRowChangeEventHandler ProcessModelRowChanging;
        
        public event ProcessModelRowChangeEventHandler ProcessModelRowChanged;
        
        public event ProcessModelRowChangeEventHandler ProcessModelRowDeleting;
        
        public event ProcessModelRowChangeEventHandler ProcessModelRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddProcessModelRow(ProcessModelRow row)
        {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelRow AddProcessModelRow(string ProcessModel, string PublishingVersion, int FK_PublishingPlatformUser, ConfigurationRow parentConfigurationRowByFK_ProcessModel_Configuration, string AcknowledgeState)
        {
            ProcessModelRow rowProcessModelRow = ((ProcessModelRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    ProcessModel,
                    PublishingVersion,
                    FK_PublishingPlatformUser,
                    null,
                    AcknowledgeState};
            if ((parentConfigurationRowByFK_ProcessModel_Configuration != null))
            {
                columnValuesArray[4] = parentConfigurationRowByFK_ProcessModel_Configuration[0];
            }
            rowProcessModelRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowProcessModelRow);
            return rowProcessModelRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelRow FindById(int Id)
        {
            return ((ProcessModelRow)(this.Rows.Find(new object[] {
                        Id})));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataTable Clone()
        {
            ProcessModelDataTable cln = ((ProcessModelDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new ProcessModelDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars()
        {
            this.columnId = base.Columns["Id"];
            this.columnProcessModel = base.Columns["ProcessModel"];
            this.columnPublishingVersion = base.Columns["PublishingVersion"];
            this.columnFK_PublishingPlatformUser = base.Columns["FK_PublishingPlatformUser"];
            this.columnFK_Configuration = base.Columns["FK_Configuration"];
            this.columnAcknowledgeState = base.Columns["AcknowledgeState"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass()
        {
            this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnId);
            this.columnProcessModel = new global::System.Data.DataColumn("ProcessModel", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnProcessModel);
            this.columnPublishingVersion = new global::System.Data.DataColumn("PublishingVersion", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnPublishingVersion);
            this.columnFK_PublishingPlatformUser = new global::System.Data.DataColumn("FK_PublishingPlatformUser", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFK_PublishingPlatformUser);
            this.columnFK_Configuration = new global::System.Data.DataColumn("FK_Configuration", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFK_Configuration);
            this.columnAcknowledgeState = new global::System.Data.DataColumn("AcknowledgeState", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnAcknowledgeState);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
            this.columnId.AutoIncrement = true;
            this.columnId.AutoIncrementSeed = -1;
            this.columnId.AutoIncrementStep = -1;
            this.columnId.AllowDBNull = false;
            this.columnId.ReadOnly = true;
            this.columnId.Unique = true;
            this.columnProcessModel.AllowDBNull = false;
            this.columnProcessModel.MaxLength = 50;
            this.columnPublishingVersion.AllowDBNull = false;
            this.columnPublishingVersion.MaxLength = 50;
            this.columnAcknowledgeState.MaxLength = 50;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelRow NewProcessModelRow()
        {
            return ((ProcessModelRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new ProcessModelRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Type GetRowType()
        {
            return typeof(ProcessModelRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.ProcessModelRowChanged != null))
            {
                this.ProcessModelRowChanged(this, new ProcessModelRowChangeEvent(((ProcessModelRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.ProcessModelRowChanging != null))
            {
                this.ProcessModelRowChanging(this, new ProcessModelRowChangeEvent(((ProcessModelRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.ProcessModelRowDeleted != null))
            {
                this.ProcessModelRowDeleted(this, new ProcessModelRowChangeEvent(((ProcessModelRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.ProcessModelRowDeleting != null))
            {
                this.ProcessModelRowDeleting(this, new ProcessModelRowChangeEvent(((ProcessModelRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemoveProcessModelRow(ProcessModelRow row)
        {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            PromoveoDataSet ds = new PromoveoDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "ProcessModelDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class ProcessModel_PublishingPlatformRoleDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {
        
        private global::System.Data.DataColumn columnId;
        
        private global::System.Data.DataColumn columnFK_ProcessModel;
        
        private global::System.Data.DataColumn columnFK_PublishingPlatformRole;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModel_PublishingPlatformRoleDataTable()
        {
            this.TableName = "ProcessModel_PublishingPlatformRole";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal ProcessModel_PublishingPlatformRoleDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ProcessModel_PublishingPlatformRoleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context)
        {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn IdColumn
        {
            get
            {
                return this.columnId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn FK_ProcessModelColumn
        {
            get
            {
                return this.columnFK_ProcessModel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn FK_PublishingPlatformRoleColumn
        {
            get
            {
                return this.columnFK_PublishingPlatformRole;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModel_PublishingPlatformRoleRow this[int index]
        {
            get
            {
                return ((ProcessModel_PublishingPlatformRoleRow)(this.Rows[index]));
            }
        }
        
        public event ProcessModel_PublishingPlatformRoleRowChangeEventHandler ProcessModel_PublishingPlatformRoleRowChanging;
        
        public event ProcessModel_PublishingPlatformRoleRowChangeEventHandler ProcessModel_PublishingPlatformRoleRowChanged;
        
        public event ProcessModel_PublishingPlatformRoleRowChangeEventHandler ProcessModel_PublishingPlatformRoleRowDeleting;
        
        public event ProcessModel_PublishingPlatformRoleRowChangeEventHandler ProcessModel_PublishingPlatformRoleRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddProcessModel_PublishingPlatformRoleRow(ProcessModel_PublishingPlatformRoleRow row)
        {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModel_PublishingPlatformRoleRow AddProcessModel_PublishingPlatformRoleRow(ProcessModelRow parentProcessModelRowByFK_ProcessModel_PublishingPlatformRole_ToProcessModel, PublishingPlatformRoleRow parentPublishingPlatformRoleRowByFK_ProcessModel_PublishingPlatformRole_ToPublishingPlatformRole)
        {
            ProcessModel_PublishingPlatformRoleRow rowProcessModel_PublishingPlatformRoleRow = ((ProcessModel_PublishingPlatformRoleRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null,
                    null};
            if ((parentProcessModelRowByFK_ProcessModel_PublishingPlatformRole_ToProcessModel != null))
            {
                columnValuesArray[1] = parentProcessModelRowByFK_ProcessModel_PublishingPlatformRole_ToProcessModel[0];
            }
            if ((parentPublishingPlatformRoleRowByFK_ProcessModel_PublishingPlatformRole_ToPublishingPlatformRole != null))
            {
                columnValuesArray[2] = parentPublishingPlatformRoleRowByFK_ProcessModel_PublishingPlatformRole_ToPublishingPlatformRole[0];
            }
            rowProcessModel_PublishingPlatformRoleRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowProcessModel_PublishingPlatformRoleRow);
            return rowProcessModel_PublishingPlatformRoleRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModel_PublishingPlatformRoleRow FindById(int Id)
        {
            return ((ProcessModel_PublishingPlatformRoleRow)(this.Rows.Find(new object[] {
                        Id})));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataTable Clone()
        {
            ProcessModel_PublishingPlatformRoleDataTable cln = ((ProcessModel_PublishingPlatformRoleDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new ProcessModel_PublishingPlatformRoleDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars()
        {
            this.columnId = base.Columns["Id"];
            this.columnFK_ProcessModel = base.Columns["FK_ProcessModel"];
            this.columnFK_PublishingPlatformRole = base.Columns["FK_PublishingPlatformRole"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass()
        {
            this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnId);
            this.columnFK_ProcessModel = new global::System.Data.DataColumn("FK_ProcessModel", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFK_ProcessModel);
            this.columnFK_PublishingPlatformRole = new global::System.Data.DataColumn("FK_PublishingPlatformRole", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFK_PublishingPlatformRole);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
            this.columnId.AutoIncrement = true;
            this.columnId.AutoIncrementSeed = -1;
            this.columnId.AutoIncrementStep = -1;
            this.columnId.AllowDBNull = false;
            this.columnId.ReadOnly = true;
            this.columnId.Unique = true;
            this.columnFK_ProcessModel.AllowDBNull = false;
            this.columnFK_PublishingPlatformRole.AllowDBNull = false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModel_PublishingPlatformRoleRow NewProcessModel_PublishingPlatformRoleRow()
        {
            return ((ProcessModel_PublishingPlatformRoleRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new ProcessModel_PublishingPlatformRoleRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Type GetRowType()
        {
            return typeof(ProcessModel_PublishingPlatformRoleRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.ProcessModel_PublishingPlatformRoleRowChanged != null))
            {
                this.ProcessModel_PublishingPlatformRoleRowChanged(this, new ProcessModel_PublishingPlatformRoleRowChangeEvent(((ProcessModel_PublishingPlatformRoleRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.ProcessModel_PublishingPlatformRoleRowChanging != null))
            {
                this.ProcessModel_PublishingPlatformRoleRowChanging(this, new ProcessModel_PublishingPlatformRoleRowChangeEvent(((ProcessModel_PublishingPlatformRoleRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.ProcessModel_PublishingPlatformRoleRowDeleted != null))
            {
                this.ProcessModel_PublishingPlatformRoleRowDeleted(this, new ProcessModel_PublishingPlatformRoleRowChangeEvent(((ProcessModel_PublishingPlatformRoleRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.ProcessModel_PublishingPlatformRoleRowDeleting != null))
            {
                this.ProcessModel_PublishingPlatformRoleRowDeleting(this, new ProcessModel_PublishingPlatformRoleRowChangeEvent(((ProcessModel_PublishingPlatformRoleRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemoveProcessModel_PublishingPlatformRoleRow(ProcessModel_PublishingPlatformRoleRow row)
        {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            PromoveoDataSet ds = new PromoveoDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "ProcessModel_PublishingPlatformRoleDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class PublishingPlatformRoleDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {
        
        private global::System.Data.DataColumn columnId;
        
        private global::System.Data.DataColumn columnRoleName;
        
        private global::System.Data.DataColumn columnFK_Configuration;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformRoleDataTable()
        {
            this.TableName = "PublishingPlatformRole";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal PublishingPlatformRoleDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PublishingPlatformRoleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context)
        {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn IdColumn
        {
            get
            {
                return this.columnId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn RoleNameColumn
        {
            get
            {
                return this.columnRoleName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn FK_ConfigurationColumn
        {
            get
            {
                return this.columnFK_Configuration;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformRoleRow this[int index]
        {
            get
            {
                return ((PublishingPlatformRoleRow)(this.Rows[index]));
            }
        }
        
        public event PublishingPlatformRoleRowChangeEventHandler PublishingPlatformRoleRowChanging;
        
        public event PublishingPlatformRoleRowChangeEventHandler PublishingPlatformRoleRowChanged;
        
        public event PublishingPlatformRoleRowChangeEventHandler PublishingPlatformRoleRowDeleting;
        
        public event PublishingPlatformRoleRowChangeEventHandler PublishingPlatformRoleRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddPublishingPlatformRoleRow(PublishingPlatformRoleRow row)
        {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformRoleRow AddPublishingPlatformRoleRow(string RoleName, ConfigurationRow parentConfigurationRowByFK_PublishingPlatformRole_Configuration)
        {
            PublishingPlatformRoleRow rowPublishingPlatformRoleRow = ((PublishingPlatformRoleRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    RoleName,
                    null};
            if ((parentConfigurationRowByFK_PublishingPlatformRole_Configuration != null))
            {
                columnValuesArray[2] = parentConfigurationRowByFK_PublishingPlatformRole_Configuration[0];
            }
            rowPublishingPlatformRoleRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowPublishingPlatformRoleRow);
            return rowPublishingPlatformRoleRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformRoleRow FindById(int Id)
        {
            return ((PublishingPlatformRoleRow)(this.Rows.Find(new object[] {
                        Id})));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataTable Clone()
        {
            PublishingPlatformRoleDataTable cln = ((PublishingPlatformRoleDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new PublishingPlatformRoleDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars()
        {
            this.columnId = base.Columns["Id"];
            this.columnRoleName = base.Columns["RoleName"];
            this.columnFK_Configuration = base.Columns["FK_Configuration"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass()
        {
            this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnId);
            this.columnRoleName = new global::System.Data.DataColumn("RoleName", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnRoleName);
            this.columnFK_Configuration = new global::System.Data.DataColumn("FK_Configuration", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFK_Configuration);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
            this.columnId.AutoIncrement = true;
            this.columnId.AutoIncrementSeed = -1;
            this.columnId.AutoIncrementStep = -1;
            this.columnId.AllowDBNull = false;
            this.columnId.ReadOnly = true;
            this.columnId.Unique = true;
            this.columnRoleName.AllowDBNull = false;
            this.columnRoleName.MaxLength = 50;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformRoleRow NewPublishingPlatformRoleRow()
        {
            return ((PublishingPlatformRoleRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new PublishingPlatformRoleRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Type GetRowType()
        {
            return typeof(PublishingPlatformRoleRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.PublishingPlatformRoleRowChanged != null))
            {
                this.PublishingPlatformRoleRowChanged(this, new PublishingPlatformRoleRowChangeEvent(((PublishingPlatformRoleRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.PublishingPlatformRoleRowChanging != null))
            {
                this.PublishingPlatformRoleRowChanging(this, new PublishingPlatformRoleRowChangeEvent(((PublishingPlatformRoleRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.PublishingPlatformRoleRowDeleted != null))
            {
                this.PublishingPlatformRoleRowDeleted(this, new PublishingPlatformRoleRowChangeEvent(((PublishingPlatformRoleRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.PublishingPlatformRoleRowDeleting != null))
            {
                this.PublishingPlatformRoleRowDeleting(this, new PublishingPlatformRoleRowChangeEvent(((PublishingPlatformRoleRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemovePublishingPlatformRoleRow(PublishingPlatformRoleRow row)
        {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            PromoveoDataSet ds = new PromoveoDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "PublishingPlatformRoleDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class PublishingPlatformUserDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {
        
        private global::System.Data.DataColumn columnId;
        
        private global::System.Data.DataColumn columnName;
        
        private global::System.Data.DataColumn columnShortname;
        
        private global::System.Data.DataColumn columnEmail;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUserDataTable()
        {
            this.TableName = "PublishingPlatformUser";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal PublishingPlatformUserDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PublishingPlatformUserDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context)
        {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn IdColumn
        {
            get
            {
                return this.columnId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn NameColumn
        {
            get
            {
                return this.columnName;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn ShortnameColumn
        {
            get
            {
                return this.columnShortname;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn EmailColumn
        {
            get
            {
                return this.columnEmail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUserRow this[int index]
        {
            get
            {
                return ((PublishingPlatformUserRow)(this.Rows[index]));
            }
        }
        
        public event PublishingPlatformUserRowChangeEventHandler PublishingPlatformUserRowChanging;
        
        public event PublishingPlatformUserRowChangeEventHandler PublishingPlatformUserRowChanged;
        
        public event PublishingPlatformUserRowChangeEventHandler PublishingPlatformUserRowDeleting;
        
        public event PublishingPlatformUserRowChangeEventHandler PublishingPlatformUserRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddPublishingPlatformUserRow(PublishingPlatformUserRow row)
        {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUserRow AddPublishingPlatformUserRow(string Name, string Shortname, string Email)
        {
            PublishingPlatformUserRow rowPublishingPlatformUserRow = ((PublishingPlatformUserRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    Name,
                    Shortname,
                    Email};
            rowPublishingPlatformUserRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowPublishingPlatformUserRow);
            return rowPublishingPlatformUserRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUserRow FindById(int Id)
        {
            return ((PublishingPlatformUserRow)(this.Rows.Find(new object[] {
                        Id})));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataTable Clone()
        {
            PublishingPlatformUserDataTable cln = ((PublishingPlatformUserDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new PublishingPlatformUserDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars()
        {
            this.columnId = base.Columns["Id"];
            this.columnName = base.Columns["Name"];
            this.columnShortname = base.Columns["Shortname"];
            this.columnEmail = base.Columns["Email"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass()
        {
            this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnId);
            this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnName);
            this.columnShortname = new global::System.Data.DataColumn("Shortname", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnShortname);
            this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnEmail);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
            this.columnId.AutoIncrement = true;
            this.columnId.AutoIncrementSeed = -1;
            this.columnId.AutoIncrementStep = -1;
            this.columnId.AllowDBNull = false;
            this.columnId.ReadOnly = true;
            this.columnId.Unique = true;
            this.columnName.AllowDBNull = false;
            this.columnName.MaxLength = 50;
            this.columnShortname.AllowDBNull = false;
            this.columnShortname.MaxLength = 50;
            this.columnEmail.MaxLength = 50;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUserRow NewPublishingPlatformUserRow()
        {
            return ((PublishingPlatformUserRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new PublishingPlatformUserRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Type GetRowType()
        {
            return typeof(PublishingPlatformUserRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.PublishingPlatformUserRowChanged != null))
            {
                this.PublishingPlatformUserRowChanged(this, new PublishingPlatformUserRowChangeEvent(((PublishingPlatformUserRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.PublishingPlatformUserRowChanging != null))
            {
                this.PublishingPlatformUserRowChanging(this, new PublishingPlatformUserRowChangeEvent(((PublishingPlatformUserRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.PublishingPlatformUserRowDeleted != null))
            {
                this.PublishingPlatformUserRowDeleted(this, new PublishingPlatformUserRowChangeEvent(((PublishingPlatformUserRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.PublishingPlatformUserRowDeleting != null))
            {
                this.PublishingPlatformUserRowDeleting(this, new PublishingPlatformUserRowChangeEvent(((PublishingPlatformUserRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemovePublishingPlatformUserRow(PublishingPlatformUserRow row)
        {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            PromoveoDataSet ds = new PromoveoDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "PublishingPlatformUserDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class PublishingPlatformUser_PublishingPlatformRoleDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {
        
        private global::System.Data.DataColumn columnId;
        
        private global::System.Data.DataColumn columnFK_PublishingPlatformRole;
        
        private global::System.Data.DataColumn columnFK_PublishingPlatformUser;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUser_PublishingPlatformRoleDataTable()
        {
            this.TableName = "PublishingPlatformUser_PublishingPlatformRole";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal PublishingPlatformUser_PublishingPlatformRoleDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PublishingPlatformUser_PublishingPlatformRoleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context)
        {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn IdColumn
        {
            get
            {
                return this.columnId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn FK_PublishingPlatformRoleColumn
        {
            get
            {
                return this.columnFK_PublishingPlatformRole;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn FK_PublishingPlatformUserColumn
        {
            get
            {
                return this.columnFK_PublishingPlatformUser;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUser_PublishingPlatformRoleRow this[int index]
        {
            get
            {
                return ((PublishingPlatformUser_PublishingPlatformRoleRow)(this.Rows[index]));
            }
        }
        
        public event PublishingPlatformUser_PublishingPlatformRoleRowChangeEventHandler PublishingPlatformUser_PublishingPlatformRoleRowChanging;
        
        public event PublishingPlatformUser_PublishingPlatformRoleRowChangeEventHandler PublishingPlatformUser_PublishingPlatformRoleRowChanged;
        
        public event PublishingPlatformUser_PublishingPlatformRoleRowChangeEventHandler PublishingPlatformUser_PublishingPlatformRoleRowDeleting;
        
        public event PublishingPlatformUser_PublishingPlatformRoleRowChangeEventHandler PublishingPlatformUser_PublishingPlatformRoleRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddPublishingPlatformUser_PublishingPlatformRoleRow(PublishingPlatformUser_PublishingPlatformRoleRow row)
        {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUser_PublishingPlatformRoleRow AddPublishingPlatformUser_PublishingPlatformRoleRow(PublishingPlatformRoleRow parentPublishingPlatformRoleRowByFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformRole, PublishingPlatformUserRow parentPublishingPlatformUserRowByFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser)
        {
            PublishingPlatformUser_PublishingPlatformRoleRow rowPublishingPlatformUser_PublishingPlatformRoleRow = ((PublishingPlatformUser_PublishingPlatformRoleRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null,
                    null};
            if ((parentPublishingPlatformRoleRowByFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformRole != null))
            {
                columnValuesArray[1] = parentPublishingPlatformRoleRowByFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformRole[0];
            }
            if ((parentPublishingPlatformUserRowByFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser != null))
            {
                columnValuesArray[2] = parentPublishingPlatformUserRowByFK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser[0];
            }
            rowPublishingPlatformUser_PublishingPlatformRoleRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowPublishingPlatformUser_PublishingPlatformRoleRow);
            return rowPublishingPlatformUser_PublishingPlatformRoleRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUser_PublishingPlatformRoleRow FindById(int Id)
        {
            return ((PublishingPlatformUser_PublishingPlatformRoleRow)(this.Rows.Find(new object[] {
                        Id})));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataTable Clone()
        {
            PublishingPlatformUser_PublishingPlatformRoleDataTable cln = ((PublishingPlatformUser_PublishingPlatformRoleDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new PublishingPlatformUser_PublishingPlatformRoleDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars()
        {
            this.columnId = base.Columns["Id"];
            this.columnFK_PublishingPlatformRole = base.Columns["FK_PublishingPlatformRole"];
            this.columnFK_PublishingPlatformUser = base.Columns["FK_PublishingPlatformUser"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass()
        {
            this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnId);
            this.columnFK_PublishingPlatformRole = new global::System.Data.DataColumn("FK_PublishingPlatformRole", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFK_PublishingPlatformRole);
            this.columnFK_PublishingPlatformUser = new global::System.Data.DataColumn("FK_PublishingPlatformUser", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFK_PublishingPlatformUser);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
            this.columnId.AutoIncrement = true;
            this.columnId.AutoIncrementSeed = -1;
            this.columnId.AutoIncrementStep = -1;
            this.columnId.AllowDBNull = false;
            this.columnId.ReadOnly = true;
            this.columnId.Unique = true;
            this.columnFK_PublishingPlatformRole.AllowDBNull = false;
            this.columnFK_PublishingPlatformUser.AllowDBNull = false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUser_PublishingPlatformRoleRow NewPublishingPlatformUser_PublishingPlatformRoleRow()
        {
            return ((PublishingPlatformUser_PublishingPlatformRoleRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new PublishingPlatformUser_PublishingPlatformRoleRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Type GetRowType()
        {
            return typeof(PublishingPlatformUser_PublishingPlatformRoleRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.PublishingPlatformUser_PublishingPlatformRoleRowChanged != null))
            {
                this.PublishingPlatformUser_PublishingPlatformRoleRowChanged(this, new PublishingPlatformUser_PublishingPlatformRoleRowChangeEvent(((PublishingPlatformUser_PublishingPlatformRoleRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.PublishingPlatformUser_PublishingPlatformRoleRowChanging != null))
            {
                this.PublishingPlatformUser_PublishingPlatformRoleRowChanging(this, new PublishingPlatformUser_PublishingPlatformRoleRowChangeEvent(((PublishingPlatformUser_PublishingPlatformRoleRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.PublishingPlatformUser_PublishingPlatformRoleRowDeleted != null))
            {
                this.PublishingPlatformUser_PublishingPlatformRoleRowDeleted(this, new PublishingPlatformUser_PublishingPlatformRoleRowChangeEvent(((PublishingPlatformUser_PublishingPlatformRoleRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.PublishingPlatformUser_PublishingPlatformRoleRowDeleting != null))
            {
                this.PublishingPlatformUser_PublishingPlatformRoleRowDeleting(this, new PublishingPlatformUser_PublishingPlatformRoleRowChangeEvent(((PublishingPlatformUser_PublishingPlatformRoleRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemovePublishingPlatformUser_PublishingPlatformRoleRow(PublishingPlatformUser_PublishingPlatformRoleRow row)
        {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            PromoveoDataSet ds = new PromoveoDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "PublishingPlatformUser_PublishingPlatformRoleDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents the strongly named DataTable class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
    public partial class UserToModelUserGroupAssignmentDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
    {
        
        private global::System.Data.DataColumn columnId;
        
        private global::System.Data.DataColumn columnFK_User;
        
        private global::System.Data.DataColumn columnFK_ModelUserGroup;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserToModelUserGroupAssignmentDataTable()
        {
            this.TableName = "UserToModelUserGroupAssignment";
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal UserToModelUserGroupAssignmentDataTable(global::System.Data.DataTable table)
        {
            this.TableName = table.TableName;
            if ((table.CaseSensitive != table.DataSet.CaseSensitive))
            {
                this.CaseSensitive = table.CaseSensitive;
            }
            if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
            {
                this.Locale = table.Locale;
            }
            if ((table.Namespace != table.DataSet.Namespace))
            {
                this.Namespace = table.Namespace;
            }
            this.Prefix = table.Prefix;
            this.MinimumCapacity = table.MinimumCapacity;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected UserToModelUserGroupAssignmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context)
        {
            this.InitVars();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn IdColumn
        {
            get
            {
                return this.columnId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn FK_UserColumn
        {
            get
            {
                return this.columnFK_User;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataColumn FK_ModelUserGroupColumn
        {
            get
            {
                return this.columnFK_ModelUserGroup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int Count
        {
            get
            {
                return this.Rows.Count;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserToModelUserGroupAssignmentRow this[int index]
        {
            get
            {
                return ((UserToModelUserGroupAssignmentRow)(this.Rows[index]));
            }
        }
        
        public event UserToModelUserGroupAssignmentRowChangeEventHandler UserToModelUserGroupAssignmentRowChanging;
        
        public event UserToModelUserGroupAssignmentRowChangeEventHandler UserToModelUserGroupAssignmentRowChanged;
        
        public event UserToModelUserGroupAssignmentRowChangeEventHandler UserToModelUserGroupAssignmentRowDeleting;
        
        public event UserToModelUserGroupAssignmentRowChangeEventHandler UserToModelUserGroupAssignmentRowDeleted;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddUserToModelUserGroupAssignmentRow(UserToModelUserGroupAssignmentRow row)
        {
            this.Rows.Add(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserToModelUserGroupAssignmentRow AddUserToModelUserGroupAssignmentRow(PublishingPlatformUserRow parentPublishingPlatformUserRowByFK_UserToModelUserGroupAssignment_ToUser, ModelUserGroupRow parentModelUserGroupRowByFK_UserToModelUserGroupAssignment_ToModelUserGroup)
        {
            UserToModelUserGroupAssignmentRow rowUserToModelUserGroupAssignmentRow = ((UserToModelUserGroupAssignmentRow)(this.NewRow()));
            object[] columnValuesArray = new object[] {
                    null,
                    null,
                    null};
            if ((parentPublishingPlatformUserRowByFK_UserToModelUserGroupAssignment_ToUser != null))
            {
                columnValuesArray[1] = parentPublishingPlatformUserRowByFK_UserToModelUserGroupAssignment_ToUser[0];
            }
            if ((parentModelUserGroupRowByFK_UserToModelUserGroupAssignment_ToModelUserGroup != null))
            {
                columnValuesArray[2] = parentModelUserGroupRowByFK_UserToModelUserGroupAssignment_ToModelUserGroup[0];
            }
            rowUserToModelUserGroupAssignmentRow.ItemArray = columnValuesArray;
            this.Rows.Add(rowUserToModelUserGroupAssignmentRow);
            return rowUserToModelUserGroupAssignmentRow;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserToModelUserGroupAssignmentRow FindById(int Id)
        {
            return ((UserToModelUserGroupAssignmentRow)(this.Rows.Find(new object[] {
                        Id})));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual global::System.Collections.IEnumerator GetEnumerator()
        {
            return this.Rows.GetEnumerator();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataTable Clone()
        {
            UserToModelUserGroupAssignmentDataTable cln = ((UserToModelUserGroupAssignmentDataTable)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataTable CreateInstance()
        {
            return new UserToModelUserGroupAssignmentDataTable();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars()
        {
            this.columnId = base.Columns["Id"];
            this.columnFK_User = base.Columns["FK_User"];
            this.columnFK_ModelUserGroup = base.Columns["FK_ModelUserGroup"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass()
        {
            this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnId);
            this.columnFK_User = new global::System.Data.DataColumn("FK_User", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFK_User);
            this.columnFK_ModelUserGroup = new global::System.Data.DataColumn("FK_ModelUserGroup", typeof(int), null, global::System.Data.MappingType.Element);
            base.Columns.Add(this.columnFK_ModelUserGroup);
            this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                            this.columnId}, true));
            this.columnId.AutoIncrement = true;
            this.columnId.AutoIncrementSeed = -1;
            this.columnId.AutoIncrementStep = -1;
            this.columnId.AllowDBNull = false;
            this.columnId.ReadOnly = true;
            this.columnId.Unique = true;
            this.columnFK_User.AllowDBNull = false;
            this.columnFK_ModelUserGroup.AllowDBNull = false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserToModelUserGroupAssignmentRow NewUserToModelUserGroupAssignmentRow()
        {
            return ((UserToModelUserGroupAssignmentRow)(this.NewRow()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
        {
            return new UserToModelUserGroupAssignmentRow(builder);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Type GetRowType()
        {
            return typeof(UserToModelUserGroupAssignmentRow);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanged(e);
            if ((this.UserToModelUserGroupAssignmentRowChanged != null))
            {
                this.UserToModelUserGroupAssignmentRowChanged(this, new UserToModelUserGroupAssignmentRowChangeEvent(((UserToModelUserGroupAssignmentRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowChanging(e);
            if ((this.UserToModelUserGroupAssignmentRowChanging != null))
            {
                this.UserToModelUserGroupAssignmentRowChanging(this, new UserToModelUserGroupAssignmentRowChangeEvent(((UserToModelUserGroupAssignmentRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleted(e);
            if ((this.UserToModelUserGroupAssignmentRowDeleted != null))
            {
                this.UserToModelUserGroupAssignmentRowDeleted(this, new UserToModelUserGroupAssignmentRowChangeEvent(((UserToModelUserGroupAssignmentRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
        {
            base.OnRowDeleting(e);
            if ((this.UserToModelUserGroupAssignmentRowDeleting != null))
            {
                this.UserToModelUserGroupAssignmentRowDeleting(this, new UserToModelUserGroupAssignmentRowChangeEvent(((UserToModelUserGroupAssignmentRow)(e.Row)), e.Action));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemoveUserToModelUserGroupAssignmentRow(UserToModelUserGroupAssignmentRow row)
        {
            this.Rows.Remove(row);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            PromoveoDataSet ds = new PromoveoDataSet();
            global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
            any1.Namespace = "http://www.w3.org/2001/XMLSchema";
            any1.MinOccurs = new decimal(0);
            any1.MaxOccurs = decimal.MaxValue;
            any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any1);
            global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
            any2.MinOccurs = new decimal(1);
            any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
            sequence.Items.Add(any2);
            global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute1.Name = "namespace";
            attribute1.FixedValue = ds.Namespace;
            type.Attributes.Add(attribute1);
            global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
            attribute2.Name = "tableTypeName";
            attribute2.FixedValue = "UserToModelUserGroupAssignmentDataTable";
            type.Attributes.Add(attribute2);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public partial class ProcessModelUsersRow : global::System.Data.DataRow
    {
        
        private ProcessModelUsersDataTable tableProcessModelUsers;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal ProcessModelUsersRow(global::System.Data.DataRowBuilder rb) : 
                base(rb)
        {
            this.tableProcessModelUsers = ((ProcessModelUsersDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return ((int)(this[this.tableProcessModelUsers.IdColumn]));
            }
            set
            {
                this[this.tableProcessModelUsers.IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return ((string)(this[this.tableProcessModelUsers.NameColumn]));
            }
            set
            {
                this[this.tableProcessModelUsers.NameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Shortname
        {
            get
            {
                return ((string)(this[this.tableProcessModelUsers.ShortnameColumn]));
            }
            set
            {
                this[this.tableProcessModelUsers.ShortnameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Email
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableProcessModelUsers.EmailColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'ProcessModelUsers\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableProcessModelUsers.EmailColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsEmailNull()
        {
            return this.IsNull(this.tableProcessModelUsers.EmailColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SetEmailNull()
        {
            this[this.tableProcessModelUsers.EmailColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUser_PublishingPlatformRoleRow[] GetPublishingPlatformUser_PublishingPlatformRoleRows()
        {
            if ((this.Table.ChildRelations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser1"] == null))
            {
                return new PublishingPlatformUser_PublishingPlatformRoleRow[0];
            }
            else
            {
                return ((PublishingPlatformUser_PublishingPlatformRoleRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser1"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserToModelUserGroupAssignmentRow[] GetUserToModelUserGroupAssignmentRows()
        {
            if ((this.Table.ChildRelations["FK_UserToModelUserGroupAssignment_ToUser1"] == null))
            {
                return new UserToModelUserGroupAssignmentRow[0];
            }
            else
            {
                return ((UserToModelUserGroupAssignmentRow[])(base.GetChildRows(this.Table.ChildRelations["FK_UserToModelUserGroupAssignment_ToUser1"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public partial class UserRoleAssignmentRow : global::System.Data.DataRow
    {
        
        private UserRoleAssignmentDataTable tableUserRoleAssignment;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal UserRoleAssignmentRow(global::System.Data.DataRowBuilder rb) : 
                base(rb)
        {
            this.tableUserRoleAssignment = ((UserRoleAssignmentDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return ((int)(this[this.tableUserRoleAssignment.IdColumn]));
            }
            set
            {
                this[this.tableUserRoleAssignment.IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return ((string)(this[this.tableUserRoleAssignment.NameColumn]));
            }
            set
            {
                this[this.tableUserRoleAssignment.NameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Shortname
        {
            get
            {
                return ((string)(this[this.tableUserRoleAssignment.ShortnameColumn]));
            }
            set
            {
                this[this.tableUserRoleAssignment.ShortnameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Email
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableUserRoleAssignment.EmailColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'UserRoleAssignment\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableUserRoleAssignment.EmailColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsEmailNull()
        {
            return this.IsNull(this.tableUserRoleAssignment.EmailColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SetEmailNull()
        {
            this[this.tableUserRoleAssignment.EmailColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUser_PublishingPlatformRoleRow[] GetPublishingPlatformUser_PublishingPlatformRoleRows()
        {
            if ((this.Table.ChildRelations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser2"] == null))
            {
                return new PublishingPlatformUser_PublishingPlatformRoleRow[0];
            }
            else
            {
                return ((PublishingPlatformUser_PublishingPlatformRoleRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser2"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserToModelUserGroupAssignmentRow[] GetUserToModelUserGroupAssignmentRows()
        {
            if ((this.Table.ChildRelations["FK_UserToModelUserGroupAssignment_ToUser2"] == null))
            {
                return new UserToModelUserGroupAssignmentRow[0];
            }
            else
            {
                return ((UserToModelUserGroupAssignmentRow[])(base.GetChildRows(this.Table.ChildRelations["FK_UserToModelUserGroupAssignment_ToUser2"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public partial class ConfigurationRow : global::System.Data.DataRow
    {
        
        private ConfigurationDataTable tableConfiguration;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal ConfigurationRow(global::System.Data.DataRowBuilder rb) : 
                base(rb)
        {
            this.tableConfiguration = ((ConfigurationDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return ((int)(this[this.tableConfiguration.IdColumn]));
            }
            set
            {
                this[this.tableConfiguration.IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return ((string)(this[this.tableConfiguration.NameColumn]));
            }
            set
            {
                this[this.tableConfiguration.NameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string VisioMasterFilename
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableConfiguration.VisioMasterFilenameColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'VisioMasterFilename\' in table \'Configuration\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableConfiguration.VisioMasterFilenameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsVisioMasterFilenameNull()
        {
            return this.IsNull(this.tableConfiguration.VisioMasterFilenameColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SetVisioMasterFilenameNull()
        {
            this[this.tableConfiguration.VisioMasterFilenameColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ModelUserGroupRow[] GetModelUserGroupRows()
        {
            if ((this.Table.ChildRelations["FK_ModelUserGroup_ToConfiguration"] == null))
            {
                return new ModelUserGroupRow[0];
            }
            else
            {
                return ((ModelUserGroupRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ModelUserGroup_ToConfiguration"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelRow[] GetProcessModelRows()
        {
            if ((this.Table.ChildRelations["FK_ProcessModel_Configuration"] == null))
            {
                return new ProcessModelRow[0];
            }
            else
            {
                return ((ProcessModelRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ProcessModel_Configuration"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformRoleRow[] GetPublishingPlatformRoleRows()
        {
            if ((this.Table.ChildRelations["FK_PublishingPlatformRole_Configuration"] == null))
            {
                return new PublishingPlatformRoleRow[0];
            }
            else
            {
                return ((PublishingPlatformRoleRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PublishingPlatformRole_Configuration"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public partial class ModelUserGroupRow : global::System.Data.DataRow
    {
        
        private ModelUserGroupDataTable tableModelUserGroup;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal ModelUserGroupRow(global::System.Data.DataRowBuilder rb) : 
                base(rb)
        {
            this.tableModelUserGroup = ((ModelUserGroupDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return ((int)(this[this.tableModelUserGroup.IdColumn]));
            }
            set
            {
                this[this.tableModelUserGroup.IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return ((string)(this[this.tableModelUserGroup.NameColumn]));
            }
            set
            {
                this[this.tableModelUserGroup.NameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int FK_Configuration
        {
            get
            {
                return ((int)(this[this.tableModelUserGroup.FK_ConfigurationColumn]));
            }
            set
            {
                this[this.tableModelUserGroup.FK_ConfigurationColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ConfigurationRow ConfigurationRow
        {
            get
            {
                return ((ConfigurationRow)(this.GetParentRow(this.Table.ParentRelations["FK_ModelUserGroup_ToConfiguration"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_ModelUserGroup_ToConfiguration"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserToModelUserGroupAssignmentRow[] GetUserToModelUserGroupAssignmentRows()
        {
            if ((this.Table.ChildRelations["FK_UserToModelUserGroupAssignment_ToModelUserGroup"] == null))
            {
                return new UserToModelUserGroupAssignmentRow[0];
            }
            else
            {
                return ((UserToModelUserGroupAssignmentRow[])(base.GetChildRows(this.Table.ChildRelations["FK_UserToModelUserGroupAssignment_ToModelUserGroup"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public partial class ProcessModelRow : global::System.Data.DataRow
    {
        
        private ProcessModelDataTable tableProcessModel;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal ProcessModelRow(global::System.Data.DataRowBuilder rb) : 
                base(rb)
        {
            this.tableProcessModel = ((ProcessModelDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return ((int)(this[this.tableProcessModel.IdColumn]));
            }
            set
            {
                this[this.tableProcessModel.IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProcessModel
        {
            get
            {
                return ((string)(this[this.tableProcessModel.ProcessModelColumn]));
            }
            set
            {
                this[this.tableProcessModel.ProcessModelColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PublishingVersion
        {
            get
            {
                return ((string)(this[this.tableProcessModel.PublishingVersionColumn]));
            }
            set
            {
                this[this.tableProcessModel.PublishingVersionColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int FK_PublishingPlatformUser
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableProcessModel.FK_PublishingPlatformUserColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'FK_PublishingPlatformUser\' in table \'ProcessModel\' is DBNul" +
                            "l.", e);
                }
            }
            set
            {
                this[this.tableProcessModel.FK_PublishingPlatformUserColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int FK_Configuration
        {
            get
            {
                try
                {
                    return ((int)(this[this.tableProcessModel.FK_ConfigurationColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'FK_Configuration\' in table \'ProcessModel\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableProcessModel.FK_ConfigurationColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AcknowledgeState
        {
            get
            {
                try
                {
                    return ((string)(this[this.tableProcessModel.AcknowledgeStateColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'AcknowledgeState\' in table \'ProcessModel\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tableProcessModel.AcknowledgeStateColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ConfigurationRow ConfigurationRow
        {
            get
            {
                return ((ConfigurationRow)(this.GetParentRow(this.Table.ParentRelations["FK_ProcessModel_Configuration"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_ProcessModel_Configuration"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsFK_PublishingPlatformUserNull()
        {
            return this.IsNull(this.tableProcessModel.FK_PublishingPlatformUserColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SetFK_PublishingPlatformUserNull()
        {
            this[this.tableProcessModel.FK_PublishingPlatformUserColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsFK_ConfigurationNull()
        {
            return this.IsNull(this.tableProcessModel.FK_ConfigurationColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SetFK_ConfigurationNull()
        {
            this[this.tableProcessModel.FK_ConfigurationColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsAcknowledgeStateNull()
        {
            return this.IsNull(this.tableProcessModel.AcknowledgeStateColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SetAcknowledgeStateNull()
        {
            this[this.tableProcessModel.AcknowledgeStateColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModel_PublishingPlatformRoleRow[] GetProcessModel_PublishingPlatformRoleRows()
        {
            if ((this.Table.ChildRelations["FK_ProcessModel_PublishingPlatformRole_ToProcessModel"] == null))
            {
                return new ProcessModel_PublishingPlatformRoleRow[0];
            }
            else
            {
                return ((ProcessModel_PublishingPlatformRoleRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ProcessModel_PublishingPlatformRole_ToProcessModel"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public partial class ProcessModel_PublishingPlatformRoleRow : global::System.Data.DataRow
    {
        
        private ProcessModel_PublishingPlatformRoleDataTable tableProcessModel_PublishingPlatformRole;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal ProcessModel_PublishingPlatformRoleRow(global::System.Data.DataRowBuilder rb) : 
                base(rb)
        {
            this.tableProcessModel_PublishingPlatformRole = ((ProcessModel_PublishingPlatformRoleDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return ((int)(this[this.tableProcessModel_PublishingPlatformRole.IdColumn]));
            }
            set
            {
                this[this.tableProcessModel_PublishingPlatformRole.IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int FK_ProcessModel
        {
            get
            {
                return ((int)(this[this.tableProcessModel_PublishingPlatformRole.FK_ProcessModelColumn]));
            }
            set
            {
                this[this.tableProcessModel_PublishingPlatformRole.FK_ProcessModelColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int FK_PublishingPlatformRole
        {
            get
            {
                return ((int)(this[this.tableProcessModel_PublishingPlatformRole.FK_PublishingPlatformRoleColumn]));
            }
            set
            {
                this[this.tableProcessModel_PublishingPlatformRole.FK_PublishingPlatformRoleColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelRow ProcessModelRow
        {
            get
            {
                return ((ProcessModelRow)(this.GetParentRow(this.Table.ParentRelations["FK_ProcessModel_PublishingPlatformRole_ToProcessModel"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_ProcessModel_PublishingPlatformRole_ToProcessModel"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformRoleRow PublishingPlatformRoleRow
        {
            get
            {
                return ((PublishingPlatformRoleRow)(this.GetParentRow(this.Table.ParentRelations["FK_ProcessModel_PublishingPlatformRole_ToPublishingPlatformRole"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_ProcessModel_PublishingPlatformRole_ToPublishingPlatformRole"]);
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public partial class PublishingPlatformRoleRow : global::System.Data.DataRow
    {
        
        private PublishingPlatformRoleDataTable tablePublishingPlatformRole;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal PublishingPlatformRoleRow(global::System.Data.DataRowBuilder rb) : 
                base(rb)
        {
            this.tablePublishingPlatformRole = ((PublishingPlatformRoleDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return ((int)(this[this.tablePublishingPlatformRole.IdColumn]));
            }
            set
            {
                this[this.tablePublishingPlatformRole.IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RoleName
        {
            get
            {
                return ((string)(this[this.tablePublishingPlatformRole.RoleNameColumn]));
            }
            set
            {
                this[this.tablePublishingPlatformRole.RoleNameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int FK_Configuration
        {
            get
            {
                try
                {
                    return ((int)(this[this.tablePublishingPlatformRole.FK_ConfigurationColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'FK_Configuration\' in table \'PublishingPlatformRole\' is DBNu" +
                            "ll.", e);
                }
            }
            set
            {
                this[this.tablePublishingPlatformRole.FK_ConfigurationColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ConfigurationRow ConfigurationRow
        {
            get
            {
                return ((ConfigurationRow)(this.GetParentRow(this.Table.ParentRelations["FK_PublishingPlatformRole_Configuration"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_PublishingPlatformRole_Configuration"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsFK_ConfigurationNull()
        {
            return this.IsNull(this.tablePublishingPlatformRole.FK_ConfigurationColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SetFK_ConfigurationNull()
        {
            this[this.tablePublishingPlatformRole.FK_ConfigurationColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModel_PublishingPlatformRoleRow[] GetProcessModel_PublishingPlatformRoleRows()
        {
            if ((this.Table.ChildRelations["FK_ProcessModel_PublishingPlatformRole_ToPublishingPlatformRole"] == null))
            {
                return new ProcessModel_PublishingPlatformRoleRow[0];
            }
            else
            {
                return ((ProcessModel_PublishingPlatformRoleRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ProcessModel_PublishingPlatformRole_ToPublishingPlatformRole"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUser_PublishingPlatformRoleRow[] GetPublishingPlatformUser_PublishingPlatformRoleRows()
        {
            if ((this.Table.ChildRelations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformRole"] == null))
            {
                return new PublishingPlatformUser_PublishingPlatformRoleRow[0];
            }
            else
            {
                return ((PublishingPlatformUser_PublishingPlatformRoleRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformRole"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public partial class PublishingPlatformUserRow : global::System.Data.DataRow
    {
        
        private PublishingPlatformUserDataTable tablePublishingPlatformUser;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal PublishingPlatformUserRow(global::System.Data.DataRowBuilder rb) : 
                base(rb)
        {
            this.tablePublishingPlatformUser = ((PublishingPlatformUserDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return ((int)(this[this.tablePublishingPlatformUser.IdColumn]));
            }
            set
            {
                this[this.tablePublishingPlatformUser.IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return ((string)(this[this.tablePublishingPlatformUser.NameColumn]));
            }
            set
            {
                this[this.tablePublishingPlatformUser.NameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Shortname
        {
            get
            {
                return ((string)(this[this.tablePublishingPlatformUser.ShortnameColumn]));
            }
            set
            {
                this[this.tablePublishingPlatformUser.ShortnameColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Email
        {
            get
            {
                try
                {
                    return ((string)(this[this.tablePublishingPlatformUser.EmailColumn]));
                }
                catch (global::System.InvalidCastException e)
                {
                    throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'PublishingPlatformUser\' is DBNull.", e);
                }
            }
            set
            {
                this[this.tablePublishingPlatformUser.EmailColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsEmailNull()
        {
            return this.IsNull(this.tablePublishingPlatformUser.EmailColumn);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SetEmailNull()
        {
            this[this.tablePublishingPlatformUser.EmailColumn] = global::System.Convert.DBNull;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUser_PublishingPlatformRoleRow[] GetPublishingPlatformUser_PublishingPlatformRoleRows()
        {
            if ((this.Table.ChildRelations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser"] == null))
            {
                return new PublishingPlatformUser_PublishingPlatformRoleRow[0];
            }
            else
            {
                return ((PublishingPlatformUser_PublishingPlatformRoleRow[])(base.GetChildRows(this.Table.ChildRelations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser"])));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserToModelUserGroupAssignmentRow[] GetUserToModelUserGroupAssignmentRows()
        {
            if ((this.Table.ChildRelations["FK_UserToModelUserGroupAssignment_ToUser"] == null))
            {
                return new UserToModelUserGroupAssignmentRow[0];
            }
            else
            {
                return ((UserToModelUserGroupAssignmentRow[])(base.GetChildRows(this.Table.ChildRelations["FK_UserToModelUserGroupAssignment_ToUser"])));
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public partial class PublishingPlatformUser_PublishingPlatformRoleRow : global::System.Data.DataRow
    {
        
        private PublishingPlatformUser_PublishingPlatformRoleDataTable tablePublishingPlatformUser_PublishingPlatformRole;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal PublishingPlatformUser_PublishingPlatformRoleRow(global::System.Data.DataRowBuilder rb) : 
                base(rb)
        {
            this.tablePublishingPlatformUser_PublishingPlatformRole = ((PublishingPlatformUser_PublishingPlatformRoleDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return ((int)(this[this.tablePublishingPlatformUser_PublishingPlatformRole.IdColumn]));
            }
            set
            {
                this[this.tablePublishingPlatformUser_PublishingPlatformRole.IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int FK_PublishingPlatformRole
        {
            get
            {
                return ((int)(this[this.tablePublishingPlatformUser_PublishingPlatformRole.FK_PublishingPlatformRoleColumn]));
            }
            set
            {
                this[this.tablePublishingPlatformUser_PublishingPlatformRole.FK_PublishingPlatformRoleColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int FK_PublishingPlatformUser
        {
            get
            {
                return ((int)(this[this.tablePublishingPlatformUser_PublishingPlatformRole.FK_PublishingPlatformUserColumn]));
            }
            set
            {
                this[this.tablePublishingPlatformUser_PublishingPlatformRole.FK_PublishingPlatformUserColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformRoleRow PublishingPlatformRoleRow
        {
            get
            {
                return ((PublishingPlatformRoleRow)(this.GetParentRow(this.Table.ParentRelations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformRole"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformRole"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUserRow PublishingPlatformUserRow
        {
            get
            {
                return ((PublishingPlatformUserRow)(this.GetParentRow(this.Table.ParentRelations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelUsersRow ProcessModelUsersRow
        {
            get
            {
                return ((ProcessModelUsersRow)(this.GetParentRow(this.Table.ParentRelations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser1"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser1"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserRoleAssignmentRow UserRoleAssignmentRow
        {
            get
            {
                return ((UserRoleAssignmentRow)(this.GetParentRow(this.Table.ParentRelations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser2"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_PublishingPlatformUser_PublishingPlatformRole_ToPublishingPlatformUser2"]);
            }
        }
    }
    
    /// <summary>
    ///Represents strongly named DataRow class.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public partial class UserToModelUserGroupAssignmentRow : global::System.Data.DataRow
    {
        
        private UserToModelUserGroupAssignmentDataTable tableUserToModelUserGroupAssignment;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal UserToModelUserGroupAssignmentRow(global::System.Data.DataRowBuilder rb) : 
                base(rb)
        {
            this.tableUserToModelUserGroupAssignment = ((UserToModelUserGroupAssignmentDataTable)(this.Table));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return ((int)(this[this.tableUserToModelUserGroupAssignment.IdColumn]));
            }
            set
            {
                this[this.tableUserToModelUserGroupAssignment.IdColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int FK_User
        {
            get
            {
                return ((int)(this[this.tableUserToModelUserGroupAssignment.FK_UserColumn]));
            }
            set
            {
                this[this.tableUserToModelUserGroupAssignment.FK_UserColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int FK_ModelUserGroup
        {
            get
            {
                return ((int)(this[this.tableUserToModelUserGroupAssignment.FK_ModelUserGroupColumn]));
            }
            set
            {
                this[this.tableUserToModelUserGroupAssignment.FK_ModelUserGroupColumn] = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ModelUserGroupRow ModelUserGroupRow
        {
            get
            {
                return ((ModelUserGroupRow)(this.GetParentRow(this.Table.ParentRelations["FK_UserToModelUserGroupAssignment_ToModelUserGroup"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_UserToModelUserGroupAssignment_ToModelUserGroup"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUserRow PublishingPlatformUserRow
        {
            get
            {
                return ((PublishingPlatformUserRow)(this.GetParentRow(this.Table.ParentRelations["FK_UserToModelUserGroupAssignment_ToUser"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_UserToModelUserGroupAssignment_ToUser"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelUsersRow ProcessModelUsersRow
        {
            get
            {
                return ((ProcessModelUsersRow)(this.GetParentRow(this.Table.ParentRelations["FK_UserToModelUserGroupAssignment_ToUser1"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_UserToModelUserGroupAssignment_ToUser1"]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserRoleAssignmentRow UserRoleAssignmentRow
        {
            get
            {
                return ((UserRoleAssignmentRow)(this.GetParentRow(this.Table.ParentRelations["FK_UserToModelUserGroupAssignment_ToUser2"])));
            }
            set
            {
                this.SetParentRow(value, this.Table.ParentRelations["FK_UserToModelUserGroupAssignment_ToUser2"]);
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public class ProcessModelUsersRowChangeEvent : global::System.EventArgs
    {
        
        private ProcessModelUsersRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelUsersRowChangeEvent(ProcessModelUsersRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelUsersRow Row
        {
            get
            {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public class UserRoleAssignmentRowChangeEvent : global::System.EventArgs
    {
        
        private UserRoleAssignmentRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserRoleAssignmentRowChangeEvent(UserRoleAssignmentRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserRoleAssignmentRow Row
        {
            get
            {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public class ConfigurationRowChangeEvent : global::System.EventArgs
    {
        
        private ConfigurationRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ConfigurationRowChangeEvent(ConfigurationRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ConfigurationRow Row
        {
            get
            {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public class ModelUserGroupRowChangeEvent : global::System.EventArgs
    {
        
        private ModelUserGroupRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ModelUserGroupRowChangeEvent(ModelUserGroupRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ModelUserGroupRow Row
        {
            get
            {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public class ProcessModelRowChangeEvent : global::System.EventArgs
    {
        
        private ProcessModelRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelRowChangeEvent(ProcessModelRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModelRow Row
        {
            get
            {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public class ProcessModel_PublishingPlatformRoleRowChangeEvent : global::System.EventArgs
    {
        
        private ProcessModel_PublishingPlatformRoleRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModel_PublishingPlatformRoleRowChangeEvent(ProcessModel_PublishingPlatformRoleRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProcessModel_PublishingPlatformRoleRow Row
        {
            get
            {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public class PublishingPlatformRoleRowChangeEvent : global::System.EventArgs
    {
        
        private PublishingPlatformRoleRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformRoleRowChangeEvent(PublishingPlatformRoleRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformRoleRow Row
        {
            get
            {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public class PublishingPlatformUserRowChangeEvent : global::System.EventArgs
    {
        
        private PublishingPlatformUserRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUserRowChangeEvent(PublishingPlatformUserRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUserRow Row
        {
            get
            {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public class PublishingPlatformUser_PublishingPlatformRoleRowChangeEvent : global::System.EventArgs
    {
        
        private PublishingPlatformUser_PublishingPlatformRoleRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUser_PublishingPlatformRoleRowChangeEvent(PublishingPlatformUser_PublishingPlatformRoleRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PublishingPlatformUser_PublishingPlatformRoleRow Row
        {
            get
            {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }
    
    /// <summary>
    ///Row event argument class
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    public class UserToModelUserGroupAssignmentRowChangeEvent : global::System.EventArgs
    {
        
        private UserToModelUserGroupAssignmentRow eventRow;
        
        private global::System.Data.DataRowAction eventAction;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserToModelUserGroupAssignmentRowChangeEvent(UserToModelUserGroupAssignmentRow row, global::System.Data.DataRowAction action)
        {
            this.eventRow = row;
            this.eventAction = action;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserToModelUserGroupAssignmentRow Row
        {
            get
            {
                return this.eventRow;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Data.DataRowAction Action
        {
            get
            {
                return this.eventAction;
            }
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetAssignedUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class GetAssignedUserRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
    public int modelRoleID;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
    public int configurationID;
    
    public GetAssignedUserRequest()
    {
    }
    
    public GetAssignedUserRequest(int modelRoleID, int configurationID)
    {
        this.modelRoleID = modelRoleID;
        this.configurationID = configurationID;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetAssignedUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class GetAssignedUserResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public PromoveoDataSet.PublishingPlatformUserDataTable GetAssignedUserResult;
    
    public GetAssignedUserResponse()
    {
    }
    
    public GetAssignedUserResponse(PromoveoDataSet.PublishingPlatformUserDataTable GetAssignedUserResult)
    {
        this.GetAssignedUserResult = GetAssignedUserResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetAvailableUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class GetAvailableUserRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
    public int modelRoleID;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
    public int configurationID;
    
    public GetAvailableUserRequest()
    {
    }
    
    public GetAvailableUserRequest(int modelRoleID, int configurationID)
    {
        this.modelRoleID = modelRoleID;
        this.configurationID = configurationID;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetAvailableUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class GetAvailableUserResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public PromoveoDataSet.PublishingPlatformUserDataTable GetAvailableUserResult;
    
    public GetAvailableUserResponse()
    {
    }
    
    public GetAvailableUserResponse(PromoveoDataSet.PublishingPlatformUserDataTable GetAvailableUserResult)
    {
        this.GetAvailableUserResult = GetAvailableUserResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetModelUserRoles", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class GetModelUserRolesRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
    public int configurationID;
    
    public GetModelUserRolesRequest()
    {
    }
    
    public GetModelUserRolesRequest(int configurationID)
    {
        this.configurationID = configurationID;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetModelUserRolesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class GetModelUserRolesResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public PromoveoDataSet.ModelUserGroupDataTable GetModelUserRolesResult;
    
    public GetModelUserRolesResponse()
    {
    }
    
    public GetModelUserRolesResponse(PromoveoDataSet.ModelUserGroupDataTable GetModelUserRolesResult)
    {
        this.GetModelUserRolesResult = GetModelUserRolesResult;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="Update", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class UpdateRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public PromoveoDataSet.ModelUserGroupDataTable dataTable;
    
    public UpdateRequest()
    {
    }
    
    public UpdateRequest(PromoveoDataSet.ModelUserGroupDataTable dataTable)
    {
        this.dataTable = dataTable;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class UpdateResponse
{
    
    public UpdateResponse()
    {
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IModelUserRolesChannel : IModelUserRoles, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class ModelUserRolesClient : System.ServiceModel.ClientBase<IModelUserRoles>, IModelUserRoles
{
    
    public ModelUserRolesClient()
    {
    }
    
    public ModelUserRolesClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public ModelUserRolesClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ModelUserRolesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ModelUserRolesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void AssignUser(int configurationID, int modelRoleID, int userID)
    {
        base.Channel.AssignUser(configurationID, modelRoleID, userID);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetAssignedUserResponse IModelUserRoles.GetAssignedUser(GetAssignedUserRequest request)
    {
        return base.Channel.GetAssignedUser(request);
    }
    
    public PromoveoDataSet.PublishingPlatformUserDataTable GetAssignedUser(int modelRoleID, int configurationID)
    {
        GetAssignedUserRequest inValue = new GetAssignedUserRequest();
        inValue.modelRoleID = modelRoleID;
        inValue.configurationID = configurationID;
        GetAssignedUserResponse retVal = ((IModelUserRoles)(this)).GetAssignedUser(inValue);
        return retVal.GetAssignedUserResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetAvailableUserResponse IModelUserRoles.GetAvailableUser(GetAvailableUserRequest request)
    {
        return base.Channel.GetAvailableUser(request);
    }
    
    public PromoveoDataSet.PublishingPlatformUserDataTable GetAvailableUser(int modelRoleID, int configurationID)
    {
        GetAvailableUserRequest inValue = new GetAvailableUserRequest();
        inValue.modelRoleID = modelRoleID;
        inValue.configurationID = configurationID;
        GetAvailableUserResponse retVal = ((IModelUserRoles)(this)).GetAvailableUser(inValue);
        return retVal.GetAvailableUserResult;
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetModelUserRolesResponse IModelUserRoles.GetModelUserRoles(GetModelUserRolesRequest request)
    {
        return base.Channel.GetModelUserRoles(request);
    }
    
    public PromoveoDataSet.ModelUserGroupDataTable GetModelUserRoles(int configurationID)
    {
        GetModelUserRolesRequest inValue = new GetModelUserRolesRequest();
        inValue.configurationID = configurationID;
        GetModelUserRolesResponse retVal = ((IModelUserRoles)(this)).GetModelUserRoles(inValue);
        return retVal.GetModelUserRolesResult;
    }
    
    public void RemoveUser(int configurationID, int modelRoleID, int userID)
    {
        base.Channel.RemoveUser(configurationID, modelRoleID, userID);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    UpdateResponse IModelUserRoles.Update(UpdateRequest request)
    {
        return base.Channel.Update(request);
    }
    
    public void Update(PromoveoDataSet.ModelUserGroupDataTable dataTable)
    {
        UpdateRequest inValue = new UpdateRequest();
        inValue.dataTable = dataTable;
        UpdateResponse retVal = ((IModelUserRoles)(this)).Update(inValue);
    }
}
